{"version":3,"sources":["components/offlineDetect.js","components/navigationbar.js","components/Notification.js","components/footer.js","components/carousel.js","serviceWorkerRegistration.js","components/pwa updater.js","page/main.js","components/googleOauth.js","page/login.js","components/customers/foodcontent.js","page/customer/purchase.js","components/listfood.js","page/customer/order.js","helpers/Log.js","settings.js","components/settingsOption.js","components/settingconfiguration/settingConfigure.js","page/settings.js","components/liststore.js","page/customer/restaurant.js","components/transaction.js","page/customer/history.js","page/sells/store.js","components/menuoption.js","components/sells/listaddedfood.js","page/sells/menu.js","page/sells/advanced.js","page/codeofconduct.js","page/privacy.js","components/signupblock.js","page/signup.js","page/feedback.js","page/sells/newmenu.js","page/sells/newoption.js","page/sells/CustomerServiceComponent/DiskQuota.js","helpers/API.js","page/sells/CustomerServiceComponent/Subscription.js","page/sells/CustomerServiceComponent/Plan.js","page/sells/service.js","page/sells/test.js","page/sells/viewbooked.js","page/customer/query.js","App.js","reportWebVitals.js","index.js"],"names":["OfflineDetect","polling","url","config","style","textAlign","className","React","Component","Navibar","props","combination","Cookies","getAll","send","push","state","isGoogle","isSells","isLoggedIn","username","searchTerm","handleSearchTermChange","bind","searchProduct","this","location","pathname","indexOf","history","replace","go","e","setState","target","value","toHello","Fragment","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","as","to","rel","TextField","onChange","label","variant","size","InputProps","endAdornment","IconButton","onClick","cookies","remove","set","path","window","withRouter","Notification","alert","alertSentence","Footer","Container","Row","Col","Carousels","Carousel","src","alt","Caption","isLocalhost","Boolean","hostname","match","register","navigator","URL","process","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","PwaUpdater","useState","showReload","setShowReload","reloadPage","a","serviceWorkerRegistration","useEffect","waiting","postMessage","type","Snackbar","open","message","anchorOrigin","vertical","horizontal","action","Button","color","Homepage","scrollTo","top","behavior","GoogleOauth","googleCloudPlatformIdActual","responseGoogle","google_response","JSON","stringify","data","method","body","Headers","ok","json","text","res","Error","parse","undefined","profileObj","givenName","err","clientId","buttonText","onFailure","hostedDomain","cookiePolicy","Login","loading","hidden","Spinner","animation","placeholder","email","document","getElementById","passwd","search","loginResponse","FoodContent","setTitle","picture","setPicture","price","setPrice","description","setDescription","comment","setComment","useHistory","store","product","Swal","fire","icon","confirmButtonText","allcookies","getData","Figure","Image","width","resizeMode","lg","TextareaAutosize","rows","event","display","marginLeft","confirmText","confirm","html","Purchase","params","ListFood","setData","setLoading","isInitialMount","useRef","storeId","myJson","i","length","current","map","item","Card","Img","picUrl","Body","Title","name","Text","Order","GreatLog","msg","toUpperCase","setting","configuration","afterFetch","SettingsOption","SettingConfigure","urlSelected","split","collection","init","selected","localizedMessage","code","Settings","xs","ListStore","Restaurant","Transaction","transaction","setTransaction","r","Update","product_id","Histories","StoreSetting","MenuOption","ListAddedFood","MenuSetting","Advanced","CodeofConduct","toBeReplace","RegExp","titleUrl","innerHTML","ptitle","createElement","textContent","appendChild","updateTime","innerText","Privacy","Signupblock","required","passwdVerify","token","Signup","Feedback","Form","Group","Label","Control","question","toSend","FormData","append","mode","ToolBar","popupUrl","aria-hidden","MenuConfigurator","image","setImage","uploading","setUploading","imageUrl","setImageUrl","subtitle","postURL","onSubmit","preventDefault","Send","evt","reader","FileReader","file","files","onload","upload","result","formData","readAsDataURL","NewMenu","NewOption","array","index","node","DiskQuota","quota","exceed_quota","remain","toFixed","total","API","endpoint","cb","str","replaceAll","Subscription","subscription","plan","disk_quota","expires_at","Plan","generateECPay","api","CustomerService","subscriptions","plans","call","getDiskQuota","getSubscriptions","getPlans","subscriptionsElems","plansElems","faHeadphones","Table","Pusher","require","Echo","broadcaster","wsHost","wsPath","wsPort","REACT_APP_WS_PORT","disableStats","key","forceTLS","authorizer","channel","options","authorize","socketId","callback","axios","Authorization","socket_id","channel_name","SellsTest","transactions","rating","x","IntroJs","setTimeout","start","that","private","listen","prev","permission","requestPermission","Toast","ToastHeader","substring","ToastBody","qty","ButtonGroup","Array","keys","slice","handleRate","data-star","faStar","faTrash","data-intro","requestNotification","transactionsToast","ViewBooked","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","margin","maxWidth","height","img","maxHeight","miniIcon","Result","classes","Paper","elevation","Grid","container","sm","direction","Box","fontSize","green","parseFloat","weight","InfoOutlined","Typography","gutterBottom","component","mb","borderColor","Rating","ratings_avg","readOnly","ButtonBase","Query","isInitState","term","setTerm","products","setProducts","useLocation","getProductQueryResult","useCallback","q","URLSearchParams","resultElems","LinearProgress","helperText","fullWidth","InputLabelProps","shrink","App","CodeOfConduct","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.255f4064.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Offline} from \"react-detect-offline\";\r\n\r\nimport config from '../config.json'\r\n\r\nclass OfflineDetect extends React.Component{\r\n    render(){\r\n        const polling = {url: config['docRoot']+'status.json'}\r\n        return(\r\n            <Offline polling={polling}>\r\n                <p style={{textAlign: 'center'}} className=\"p-3 mb-2 bg-danger text-white\">離線中，請檢察您的連線狀況</p>\r\n            </Offline>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OfflineDetect","import React from 'react'\r\n\r\nimport {Nav, Navbar, NavDropdown} from 'react-bootstrap'\r\n\r\nimport Cookies from 'universal-cookie'\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport {IconButton, TextField} from \"@material-ui/core\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nclass Navibar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const cookies = new Cookies()\r\n        const combination = cookies.getAll()\r\n        let send = []\r\n        combination['isGoogle'] ? send.push(true) : send.push(false)\r\n        combination['isSells'] ? send.push(true) : send.push(false)\r\n        combination['session'] ? send.push(true) : send.push(false)\r\n        this.state = {\r\n            isGoogle: send[0],\r\n            isSells: send[1],\r\n            isLoggedIn: send[2],//!cookies.get('loggedin') || true\r\n            username: combination['userName'] || \"Anonymous\",\r\n            searchTerm: \"\"\r\n        }\r\n        this.handleSearchTermChange = this.handleSearchTermChange.bind(this)\r\n        this.searchProduct = this.searchProduct.bind(this)\r\n    }\r\n\r\n    searchProduct() {\r\n        if (this.props.location.pathname.indexOf('query') > -1) {\r\n            this.props.history.replace('/query?q=' + this.state.searchTerm)\r\n            this.props.history.go(0)\r\n        } else {\r\n            this.props.history.push('/query?q=' + this.state.searchTerm)\r\n        }\r\n\r\n    }\r\n\r\n    handleSearchTermChange(e) {\r\n        this.setState({\r\n            searchTerm: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const signOut = () => {\r\n            //normal account signout\r\n            //window.alert('logging out')\r\n            //remove cookie\r\n            const cookies = new Cookies()\r\n            cookies.remove('id')\r\n            cookies.remove('isGoogle')\r\n            cookies.remove('isSells')\r\n            cookies.remove('session')\r\n            cookies.remove('userName')\r\n            cookies.remove('storeId')\r\n            cookies.remove('name')\r\n            cookies.set('alert','登出成功',{path: '/'})\r\n            //reload page\r\n            window.location.href = '/'\r\n        }\r\n        const toHello = \"嗨! \"+this.state.username\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/\">美廣訂餐系統</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"#/restaurant\">餐廳</Nav.Link>\r\n                            {this.state.isSells && <NavDropdown title=\"商家管理\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"#/config/menu\">菜單設定</NavDropdown.Item>\r\n                                <NavDropdown.Item as={Link} to=\"/service\">客服服務</NavDropdown.Item>\r\n                                <NavDropdown.Item as={Link} to=\"/booked\">出餐</NavDropdown.Item>\r\n                            </NavDropdown>}\r\n                            <NavDropdown title=\"相關連結\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"https://sites.google.com/view/tnfshsu/\"\r\n                                                  rel=\"noreferrer noopener\" target=\"_blank\">學聯會</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"https://tnfsacec.github.io\" rel=\"noreferrer noopener\"\r\n                                                  target=\"_blank\">選委會</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <TextField value={this.state.searchTerm} onChange={this.handleSearchTermChange} id=\"term\"\r\n                                       label=\"搜尋想吃的\" variant=\"outlined\" size=\"small\"\r\n                                       InputProps={{\r\n                                           endAdornment:\r\n                                               (<IconButton onClick={this.searchProduct}>\r\n                                                   <SearchIcon/>\r\n                                               </IconButton>)\r\n                                       }}/>\r\n                        </Nav>\r\n                        {this.state.isLoggedIn ? <NavDropdown title={toHello} id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"#/history\">歷史紀錄</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#/settings\">設定</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={signOut}>登出</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            :\r\n                            <Nav>\r\n                                <Nav.Link href=\"#/signup\">註冊</Nav.Link>\r\n                                <Nav.Link href=\"#/login\">登入</Nav.Link>\r\n                            </Nav>}\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Navibar)","import React from 'react'\r\n\r\nimport Cookies from \"universal-cookie\";\r\n\r\nclass Notification extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let send = []\r\n        const cookies = new Cookies()\r\n        const combination = cookies.getAll()\r\n        combination['alert'] ? send.push(true) : send.push(false)\r\n        this.state = {\r\n            alert: send[0],\r\n            alertSentence: combination['alert']\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const cookies = new Cookies()\r\n        cookies.remove('alert')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    this.state.alert &&\r\n                    <p className=\"p-3 mb-2 bg-success text-white\">\r\n                        {this.state.alertSentence}\r\n                    </p>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport config from \"../config.json\";\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <br/>\r\n                <div className={\"p-3 mb-2 bg-dark text-white \"}>\r\n                    <Container>\r\n                        <br/>\r\n                        <Row>\r\n                            <Col>\r\n                                <Link to=\"/privacy\">隱私權聲明</Link><br/>\r\n                                <Link to=\"/COC\">行為準則</Link><br/>\r\n                                <Link to=\"/feedback\">意見反饋</Link>\r\n                            </Col>\r\n                            <Col>\r\n                                關於我們：<br />\r\n                                <a href='https://sivir.pw' rel=\"noreferrer noopener\" target='_blank'>Milliax</a>、\r\n                                <a href='https://hsuan.app/' rel=\"noreferrer noopener\" target='_blank'>Hsuan1117</a>、\r\n                                <a href='https://neodoggy.github.io/' rel=\"noreferrer noopener\"\r\n                                   target='_blank'>Neodoggy</a>\r\n                                <br/>\r\n                                <br/>\r\n                                <span>version: {config['version']}</span>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n\r\nclass Carousels extends React.Component{\r\n    render(){\r\n        return(\r\n            <Carousel>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src=\"https://media.wired.com/photos/598e35fb99d76447c4eb1f28/master/pass/phonepicutres-TA.jpg\"\r\n                        alt=\"First slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>First slide label</h3>\r\n                        <p>對不起我盜圖</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src=\"https://media.wired.com/photos/598e35fb99d76447c4eb1f28/master/pass/phonepicutres-TA.jpg\"\r\n                        alt=\"Second slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>Second slide label</h3>\r\n                        <p>對不起我盜圖</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src=\"https://media.wired.com/photos/598e35fb99d76447c4eb1f28/master/pass/phonepicutres-TA.jpg\"\r\n                        alt=\"Third slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>Third slide label</h3>\r\n                        <p>對不起我盜圖</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Carousels","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Snackbar, Button } from '@material-ui/core';\r\nimport * as serviceWorkerRegistration from '../serviceWorkerRegistration';\r\n\r\nexport default function PwaUpdater(){\r\n    const [showReload, setShowReload] = useState(false)\r\n    //const [waitingWorker, setWaitingWorker] = useState<ServiceWorker | null>(null)\r\n\r\n    const onSWUpdate = () => {\r\n        serviceWorkerRegistration.register({\r\n            onUpdate: registration =>{\r\n                window.alert('發現新版本！！！ 點此立即更新')\r\n                if(registration && registration.waiting){\r\n                    registration.waiting.postMessage({type: 'SKIP_WAITING'})\r\n                }\r\n                window.location.reload()\r\n            }\r\n        });\r\n    }\r\n    async function reloadPage (){\r\n        await serviceWorkerRegistration.register({})\r\n        setShowReload(false)\r\n        window.location.reload(true)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        onSWUpdate()\r\n    },[])\r\n\r\n    return(\r\n        <Snackbar\r\n            open={showReload}\r\n            message=\"A new version is available!\"\r\n            onClick={reloadPage}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            action={\r\n                <Button\r\n                    color=\"inherit\"\r\n                    size=\"small\"\r\n                    onClick={reloadPage}\r\n                >\r\n                    Reload\r\n                </Button>\r\n            }\r\n        />\r\n    )\r\n}","import React from 'react'\r\nimport Carousels from '../components/carousel'\r\nimport PWAUpdater from '../components/pwa updater'\r\n\r\n\r\nimport {\r\n    Container,\r\n    //Button\r\n} from 'react-bootstrap'\r\n//import {API} from \"../helpers/API\";\r\n\r\nclass Homepage extends React.Component {\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0, behavior: 'smooth'})\r\n    }\r\n\r\n    /*Test(){\r\n        console.log(1)\r\n        let api = new API()\r\n        api.call('/stores',{},(r)=>{\r\n            console.log(r)\r\n        })\r\n    }*/\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Container>\r\n                    <PWAUpdater/>\r\n                    {/*<Picture />*/}\r\n                    <Carousels/>\r\n                    {/*<Button onClick={this.Test}>Test</Button>*/}\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage\r\n","import React from 'react'\r\n\r\nimport GoogleLogin from 'react-google-login'\r\nimport Cookies from 'universal-cookie'\r\nimport config from '../config.json'\r\n\r\nclass GoogleOauth extends React.Component {\r\n    render() {\r\n        const googleCloudPlatformIdActual = config['googleCloudPlatformId'] + \".apps.googleusercontent.com\"\r\n        const responseGoogle = (google_response) => {\r\n            console.log(JSON.stringify(google_response))\r\n            // send request to backend\r\n            let data = {\r\n                'token': google_response['accessToken'],\r\n            }\r\n\r\n            const url = process.env.REACT_APP_API_ENDPOINT + '/google'\r\n            fetch(url, {\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                })\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                }\r\n                return response.text().then(res => {\r\n                    throw new Error(res)\r\n                })\r\n            }).catch((error) => {\r\n                console.log(error.message)\r\n                let response = JSON.parse(error.message)\r\n                window.alert(\r\n                    `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`\r\n                )\r\n            }).then((response) => {\r\n                // add cookies\r\n                if(google_response['profileObj']['givenName'] === undefined){\r\n                    return\r\n                }\r\n                const cookies = new Cookies()\r\n                cookies.set('session', response['access_token'], {path: '/'})\r\n                cookies.set('isGoogle', 'true', {path: '/'})\r\n                cookies.set('alert', '登入成功', {path: '/'})\r\n                cookies.set('userName', google_response?.profileObj?.givenName, {path: '/'})\r\n\r\n                window.location.replace('/')\r\n            }).catch(err=>{\r\n                console.log(`Failed: ${err}`)\r\n            })\r\n        };\r\n        return (\r\n            <>\r\n                <GoogleLogin\r\n                    clientId={googleCloudPlatformIdActual}\r\n                    buttonText=\"使用 Google 登入\"\r\n                    onSuccess={responseGoogle}\r\n                    onFailure={responseGoogle}\r\n                    hostedDomain={config['gmailSuffix']}\r\n                    cookiePolicy={\"single_host_origin\"}\r\n                    //uxMode={\"redirect\"}\r\n                    //redirectUri={config['project']}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GoogleOauth\r\n","import React from 'react'\r\n//import Signinblock from \"../components/signinblock\";\r\nimport {Col, Container, Row, Spinner} from \"react-bootstrap\";\r\nimport GoogleOauth from \"../components/googleOauth\";\r\nimport Cookies from \"universal-cookie\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0, behavior: 'smooth'})\r\n    }\r\n\r\n    render() {\r\n        const Send = () => {\r\n            const email = document.getElementById('userInputEmail')\r\n            const passwd = document.getElementById('userInputPasswd')\r\n\r\n            let emailRule = /^\\w+((-\\w+)|(\\.\\w+))*@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z]+$/\r\n            //validate ok or not\r\n            if (email.value.search(emailRule) === -1) {\r\n                return\r\n            }\r\n            //send request\r\n            let data = {\r\n                'email': email.value,\r\n                'password': passwd.value,\r\n            }\r\n            let url = process.env.REACT_APP_API_ENDPOINT + '/login'\r\n            this.setState({\r\n                loading: true\r\n            })\r\n            fetch(url, {\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                })\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                }\r\n                return response.text().then(res => {\r\n                    throw new Error(res)\r\n                })\r\n            }).catch((error) => {\r\n                console.log(error.message)\r\n                let response = JSON.parse(error.message)\r\n                window.alert(`${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`)\r\n            }).then(response => {\r\n                // add cookies\r\n                const cookies = new Cookies()\r\n                cookies.set('session', response['access_token'], {path: '/'})\r\n                cookies.set('alert', '登入成功', {path: '/'})\r\n                return response\r\n            }).catch(err => {\r\n                console.log(`Failed: ${err}`)\r\n            }).then(loginResponse => {\r\n                //get account information\r\n                const meUrl = process.env.REACT_APP_API_ENDPOINT + '/me'\r\n                fetch(meUrl, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        \"Accept\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${loginResponse['access_token']}`\r\n                    }\r\n                }).then(response => {\r\n                    if (response.ok) {\r\n                        return response.json()\r\n                    }\r\n                    return response.text().then(err => {\r\n                        throw new Error(err)\r\n                    })\r\n                }).catch(error => {\r\n                    console.log(error.message)\r\n                    let response = JSON.parse(error.message)\r\n                    window.alert(`${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`)\r\n                }).then(response => {\r\n                    const cookies = new Cookies()\r\n                    cookies.set('userName', response['name'], {path: '/'})\r\n                    cookies.set('id', response['id'], {path: '/'})\r\n                    cookies.set('isSells', true, {path: '/'})\r\n                    if (response['stores'][0] !== undefined) {\r\n                        cookies.set('storeId', response['stores'][0]['id'], {path: '/'})\r\n                    }\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                    document.location.replace('/')\r\n                })\r\n            })\r\n\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Container>\r\n                    <form className={\"signInBlock\"}>\r\n                        <h3 style={{textAlign: 'center'}} className={\"p-2\"}>登入</h3>\r\n                        <center hidden={!this.state.loading}>\r\n                            <Spinner animation={\"border\"} />\r\n                        </center>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>電子郵件</label>\r\n                            <input id=\"userInputEmail\" type=\"email\" className=\"form-control\" placeholder=\"Enter email\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>密碼</label>\r\n                            <input id=\"userInputPasswd\" type=\"password\" className=\"form-control\"\r\n                                   placeholder=\"Enter password\"/>\r\n                        </div>\r\n                        <Row>\r\n                            <Col/>\r\n                            <Col/>\r\n                            <Col><Link className=\"btn btn-primary btn-block\" onClick={Send}>Submit</Link></Col>\r\n                        </Row>\r\n                        <hr/>\r\n                        <label>其他登入方式？</label>\r\n                        <div className={\"otherLoginMethod\"}>\r\n                            <GoogleOauth/>\r\n                        </div>\r\n                    </form>\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login","import React, {useEffect, useState} from 'react'\r\nimport {Button, Col, Container, Figure, Row} from 'react-bootstrap'\r\nimport {useHistory} from 'react-router-dom'\r\nimport Cookies from 'universal-cookie'\r\nimport Swal from 'sweetalert2'\r\nimport {TextareaAutosize} from \"@material-ui/core\";\r\n\r\nexport default function FoodContent(props) {\r\n    const [title, setTitle] = useState('')\r\n    const [picture, setPicture] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [comment, setComment] = useState('')\r\n    const history = useHistory()\r\n    const URL = process.env.REACT_APP_API_ENDPOINT + '/stores/' + props.store + '/products/' + props.product;\r\n\r\n    async function getData() {\r\n        fetch(URL, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n            }\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            }\r\n            return response.text().then(err => {\r\n                throw new Error(err)\r\n            })\r\n        }).then(response => {\r\n            //console.log(response)\r\n            setPrice(response['price'])\r\n            setDescription(response['description'])\r\n            setTitle(response['name'])\r\n            setPicture(response['image'])\r\n        }).catch(error => {\r\n            //console.log(error.message)\r\n            let response = JSON.parse(error.message)\r\n            Swal.fire({\r\n                title: '錯誤!',\r\n                text: `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`,\r\n                icon: 'error',\r\n                confirmButtonText: 'Ok'\r\n            }).then(() => history.push('/'))\r\n        })\r\n    }\r\n\r\n    const cookies = new Cookies()\r\n    const allcookies = cookies.getAll()\r\n\r\n    function Send() {\r\n        const confirmText =\r\n            `請確認您的訂購資訊\r\n名稱：${title}\r\n售價：${price}\r\n其他建議：(功能未開放)\r\n按 OK 送出；cancel 取消`\r\n        if (window.confirm(confirmText)) {\r\n            //window.alert('Ok')\r\n            // send transaction\r\n            const url = process.env.REACT_APP_API_ENDPOINT + '/transactions'\r\n            fetch(url, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    \"name\": title,\r\n                    \"qty\": 1,\r\n                    \"store_id\": props.store,\r\n                    \"product_id\": props.product,\r\n                    \"comment\": comment,\r\n                    \"options\": {}\r\n                }),\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${allcookies['session']}`\r\n                }\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                }\r\n                return response.text().then(res => {\r\n                    throw new Error(res)\r\n                })\r\n            }).then((res) => {\r\n                // Transaction Made\r\n                Swal.fire({\r\n                    title: '訂購成功!',\r\n                    html: (\r\n                        `感謝您利用本系統訂購產品<br>` +\r\n                        `請記得於選取時間取餐，謝謝<br>` +\r\n                        `您的交易ID為： <b>${res.id}</b>`),\r\n                    icon: 'success',\r\n                    confirmButtonText: 'Ok'\r\n                }).then(() => history.push('/'))\r\n            }).catch((error) => {\r\n                // Transaction Error\r\n                console.log(error)\r\n                let response = JSON.parse(error.message)\r\n                Swal.fire({\r\n                    title: '錯誤!',\r\n                    text: `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`,\r\n                    icon: 'error',\r\n                    confirmButtonText: 'Ok'\r\n                }).then(() => history.push('/'))\r\n            })\r\n        } else {\r\n            // fallback to center\r\n            Swal.fire({\r\n                title: '錯誤!',\r\n                text: `訂單未成立`,\r\n                icon: 'error',\r\n                confirmButtonText: 'Ok'\r\n            }).then()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container>\r\n                <br/>\r\n                <Row>\r\n                    <Col>\r\n                        <Figure>\r\n                            <Figure.Caption className={\"text-center\"}>\r\n                                {title}\r\n                            </Figure.Caption>\r\n                            <Figure.Image\r\n                                width={300}\r\n                                alt=\"餐點的照片\"\r\n                                src={process.env.REACT_APP_API_HOST + '/' + picture}\r\n                                resizeMode=\"contain\"\r\n                            />\r\n                        </Figure>\r\n                    </Col>\r\n                    <Col>{description}</Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <h5>建議售價：{price}</h5>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={9}>\r\n                        <TextareaAutosize className=\"form-control\" placeholder=\"留言\" rows=\"5\"\r\n                                          onChange={event => setComment(event.target.value)}\r\n                                          value={comment}/>\r\n                    </Col>\r\n                    <Col lg={3}>\r\n                        <div style={{display: \"flex\"}}>\r\n                            <div style={{marginLeft: \"auto\"}}>\r\n                                <Button variant=\"primary\" onClick={Send}>訂購</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport FoodContent from '../../components/customers/foodcontent'\r\n\r\nclass Purchase extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>訂餐</h1>\r\n                {/*餐點內容*/}\r\n                <FoodContent store={this.props.match.params.store} product={this.props.match.params.product}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Purchase","import React, {useEffect, useRef, useState} from 'react'\r\n\r\nimport {Button, Card, Spinner} from 'react-bootstrap'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\nfunction ListFood(props) {\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory();\r\n    const isInitialMount = useRef(true);\r\n\r\n    async function getData() {\r\n        setLoading(true)\r\n        const url = process.env.REACT_APP_API_ENDPOINT + \"/stores/\" + props.storeId + '/products'\r\n        fetch(url, {\r\n            method: 'GET'\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            }\r\n            return response.text().then(res => {\r\n                throw new Error(res)\r\n            })\r\n        }).catch((error) => {\r\n            console.log(error.message)\r\n            let response = JSON.parse(error.message)\r\n            window.alert(\r\n                `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`\r\n            )\r\n            history.push('/login')\r\n        }).then(myJson => {\r\n            console.log(myJson)\r\n            for (let i = 0; i < myJson.length; ++i) {\r\n                myJson[i]['storeId'] = props.storeId\r\n            }\r\n            setData(myJson)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isInitialMount.current) {\r\n            isInitialMount.current = false;\r\n            getData()\r\n        }\r\n    })\r\n    return (\r\n        <div className=\"ListStore\">\r\n            <center><Spinner animation={'border'} hidden={!loading}/></center>\r\n            {\r\n                data && (data.length > 0 ? data.map((item) =>\r\n                    <Card key={item.id}>\r\n                        <Card.Img variant=\"top\" src={item.picUrl}/>\r\n                        <Card.Body style={{display: \"flex\"}}>\r\n                            <div>\r\n                                <Card.Title>{item.name}</Card.Title>\r\n                                <Card.Text>{item.description}</Card.Text>\r\n                            </div>\r\n                            <div style={{marginLeft: \"auto\"}}>\r\n                                <Button variant=\"primary\" as={Link}\r\n                                        to={{pathname: `/purchase/${item.storeId}/${item.id}`}}>立即前往</Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                ) : <React.Fragment><br/><h2 style={{textAlign: 'center'}}>查無資料</h2></React.Fragment>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListFood","import React from 'react'\r\nimport ListFood from '../../components/listfood'\r\n\r\nclass Order extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0, behavior: 'smooth'})\r\n        console.log(this.props.match.params)\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>吃什麼</h1>\r\n                <ListFood storeId={this.props.match.params.storeId}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order","export function GreatLog(type, msg) {\r\n    console.log(`[${type.toUpperCase()}] ${msg}\"`)\r\n}","import Cookies from \"universal-cookie/lib\";\r\nimport {GreatLog} from \"./helpers/Log\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport const setting = [\r\n    {\r\n        \"name\": \"啟動商店功能\",\r\n        \"url\": \"/settings/activate\"\r\n        //what to do\r\n\r\n    },\r\n    {\r\n        \"name\": \"變更商店名\",\r\n        \"url\": \"/settings/change_name\"\r\n    },\r\n    {\r\n        \"name\": \"變更密碼\",\r\n        \"url\": \"/settings/change_password\"\r\n    }\r\n]\r\n\r\nexport const configuration = {\r\n    \"change_name\": {\r\n        \"title\": \"變更商店名\",\r\n        \"hint\": \"請輸入商店名\",\r\n        \"placeholder\": \"新商店名\",\r\n        \"submitUri\": process.env.REACT_APP_API_ENDPOINT + '/stores',\r\n        \"method\": \"PUT\",\r\n        afterFetch(res) {\r\n            GreatLog('debug', res.id)\r\n            cookies.set('storeId', res.id)\r\n        }\r\n    },\r\n    \"change_password\": {\r\n        \"title\": \"變更密碼\",\r\n        \"hint\": \"請輸入新密碼\",\r\n        \"placeholder\": \"新密碼\",\r\n        \"submitUri\": process.env.REACT_APP_API_ENDPOINT + '/change_password',\r\n        \"method\": \"POST\",\r\n        \"return\": [\"newpassword\"]\r\n    },\r\n    \"activate\": {\r\n        \"title\": \"啟動商店功能\",\r\n        \"hint\": \"請輸入商店名\",\r\n        \"placeholder\": \"商店名\",\r\n        \"submitUri\": process.env.REACT_APP_API_ENDPOINT + '/stores',\r\n        \"method\": \"POST\",\r\n        \"return\": [\"name\"],\r\n        afterFetch(res) {\r\n            GreatLog('debug', res.id)\r\n            cookies.set('storeId', res.id)\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport {\r\n    Link,\r\n} from 'react-router-dom'\r\nimport {Card} from \"react-bootstrap\";\r\nimport {setting} from '../settings.js'\r\n\r\n\r\nfunction SettingsOption(){\r\n    return(\r\n        setting.map((item)=>\r\n            <Card>\r\n                <Card.Body style={{display:\"flex\"}}>\r\n                    <div>\r\n                        <Link to={item.url}>{item.name}</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SettingsOption","import React from 'react'\r\n\r\nimport {configuration} from \"../../settings\";\r\nimport Cookies from \"universal-cookie\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass SettingConfigure extends React.Component {\r\n\r\n    render() {\r\n        const browserUrl = document.location.href\r\n        const splitUrl = browserUrl.split('/')\r\n        const urlSelected = splitUrl[5]\r\n\r\n        const Send = () => {\r\n            const cookies = new Cookies()\r\n            const collection = cookies.getAll()\r\n            if (!collection['session']) {\r\n                window.alert(`Session expired`)\r\n                document.location.replace('/')\r\n            }\r\n            let init = {\r\n                method: configuration[urlSelected]['method'],\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${collection['session']}`,\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            }\r\n            if (configuration[urlSelected]['method'] === 'POST') {\r\n                let data = {}\r\n                for (let i = 0; i < configuration[urlSelected]['return'].length; ++i) {\r\n                    let selected = document.getElementById('userInput')\r\n                    data[configuration[urlSelected][\"return\"][i]] = selected.value\r\n                }\r\n                init['body'] = JSON.stringify(data)\r\n            }\r\n\r\n            fetch(configuration[urlSelected]['submitUri'], init).then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                }\r\n                return response.text().then(err => {\r\n                    throw new Error(err)\r\n                })\r\n            }).then(response => {\r\n                console.log(response)\r\n                Swal.fire({\r\n                    title: '成功!',\r\n                    text: `更新成功, 歡迎${response?.name ?? ''}!`,\r\n                    icon: 'success',\r\n                    confirmButtonText: 'Ok'\r\n                }).then(() => {\r\n                    configuration[urlSelected]?.afterFetch?.(response)\r\n                    this.props.history.go(0);\r\n                })\r\n            }).catch(error => {\r\n                let response = JSON.parse(error.message).error\r\n                Swal.fire({\r\n                    title: '錯誤!',\r\n                    html: (\r\n                        `錯誤： ${response?.localizedMessage ?? ''}! <br>\r\n                        錯誤代碼： ${response?.code}(${response?.status})<br>\r\n                        如問題持續發生，請提供這些資訊給工程師!\r\n                        `),\r\n                    icon: 'error',\r\n                    confirmButtonText: 'Ok'\r\n                })\r\n            })\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {configuration[urlSelected] &&\r\n                <React.Fragment><h2>{configuration[urlSelected]['title']}</h2>\r\n                    <div className=\"form-group\">\r\n                        <label>{configuration[urlSelected]['hint']}</label>\r\n                        <input id='userInput' type='text' className='form-control'\r\n                               placeholder={configuration[urlSelected]['placeholder']}/>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={Send}>確認</button>\r\n                </React.Fragment>}\r\n                {!configuration[urlSelected] && urlSelected && <h2>請輸入合法功能</h2>}\r\n                {!configuration[urlSelected] && !urlSelected && <h2>請選取左邊功能以繼續</h2>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(SettingConfigure)\r\n","import React from 'react'\r\nimport {Container, Row,Col} from \"react-bootstrap\";\r\n\r\nimport SettingOption from '../components/settingsOption'\r\nimport SettingConfigure from '../components/settingconfiguration/settingConfigure'\r\n\r\nclass Settings extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>設定</h1>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={3}>\r\n                            <SettingOption />\r\n                        </Col>\r\n                        <Col xs={7}>\r\n                            <SettingConfigure/>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Settings","import React, {useEffect, useState} from 'react'\r\n\r\nimport {Button, Card, Spinner} from 'react-bootstrap'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction ListStore(){\r\n    const [data,setData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const getData = ()=>{\r\n        const url = process.env.REACT_APP_API_ENDPOINT + '/stores'\r\n        console.log(url)\r\n        fetch(url,{\r\n            method: 'GET'\r\n        }).then(response => {\r\n            setLoading(false)\r\n            if (response.ok) {\r\n                return response.json()\r\n            }\r\n            return response.text().then(res => {\r\n                throw new Error(res)\r\n            })\r\n        }).catch((error) => {\r\n            console.log(error.message)\r\n            let response = JSON.parse(error.message)\r\n            window.alert(\r\n                `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`\r\n            )\r\n            window.location.replace('/')\r\n        }).then(myJson =>{\r\n            console.log(myJson)\r\n            setData(myJson)\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        getData()\r\n    },[])\r\n    return(\r\n        <div className=\"ListStore\">\r\n            {\r\n                data && (data.length > 0 ? data.map((item)=>\r\n                    <Card key={item.id}>\r\n                        <Card.Img variant=\"top\" src={item.picUrl} />\r\n                        <Card.Body style={{display:\"flex\"}}>\r\n                            <div>\r\n                                <Card.Title>{item.name}</Card.Title>\r\n                                <Card.Text>{item.description}</Card.Text>\r\n                            </div>\r\n                            <div style={{marginLeft:\"auto\"}}>\r\n                                <Button variant=\"primary\" as={Link} to={{pathname:`/order/${item.id}`}}>立即查看</Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                ) : <React.Fragment><br/><h2 style={{textAlign: 'center'}}>目前無相關資料</h2></React.Fragment>)\r\n            }\r\n            <center>\r\n                <Spinner animation={\"border\"} hidden={!loading}/>\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListStore","import React from 'react'\r\n\r\nimport Liststore from '../../components/liststore'\r\nimport {\r\n    Container\r\n} from 'react-bootstrap'\r\n\r\nclass Restaurant extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>餐廳</h1>\r\n                <Container>\r\n                    <Liststore />\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Restaurant","import React, {useEffect, useState} from 'react'\r\nimport Cookies from 'universal-cookie'\r\nimport {Button, Card, Container} from 'react-bootstrap'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Transaction(){\r\n    const [transaction,setTransaction] = useState([])\r\n\r\n    async function Update(){\r\n        const cookies = new Cookies()\r\n        const allcookies = cookies.getAll()\r\n        const fetchURL = process.env.REACT_APP_API_ENDPOINT + '/transactions'\r\n        fetch(fetchURL,{\r\n            method: 'GET',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `Bearer ${allcookies['session']}`\r\n            }\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            }\r\n            return response.text().then(res => {\r\n                throw new Error(res)\r\n            })\r\n        }).catch((error) => {\r\n            console.log(error.message)\r\n            let response = JSON.parse(error.message)\r\n            window.alert(\r\n                `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`\r\n            )\r\n            window.location.replace('/')\r\n        }).then(r => {\r\n            console.log(r)\r\n            setTransaction(r)\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        Update()\r\n    },[])\r\n\r\n    return(\r\n        <Container>\r\n            <div className={\"History\"}>\r\n                {\r\n                    transaction && transaction.length>0 && transaction.map((item)=>\r\n                        <Card>\r\n                            <Card.Img variant=\"top\" src={item.picUrl} />\r\n                            <Card.Body style={{display:\"flex\"}}>\r\n                                <div>\r\n                                    <Card.Title>{item.product_id}</Card.Title>\r\n                                    <Card.Text>{item.comment}</Card.Text>\r\n                                </div>\r\n                                <div style={{marginLeft:\"auto\"}}>\r\n                                    <Button variant=\"primary\" as={Link} to={{pathname:`/order/${item.id}`}}>查看</Button>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )\r\n                }\r\n            </div>\r\n        </Container>\r\n    )\r\n}","import React from 'react'\r\nimport Transaction from '../../components/transaction'\r\n\r\nclass Histories extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>歷史紀錄</h1>\r\n                <Transaction />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Histories","import React from 'react'\r\n\r\nclass StoreSetting extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>商家設定</h1>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StoreSetting","import React from 'react'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass MenuOption extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className=\"optionBar\">\r\n                <ul>\r\n                    <li><Link to=\"/config/menu/new\">新增</Link></li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MenuOption","import React, {useEffect, useRef, useState} from 'react'\r\nimport {Button, Card} from \"react-bootstrap\";\r\nimport Cookies from 'universal-cookie'\r\nimport {Link} from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default function ListAddedFood(){\r\n    const [data,setData] = useState([])\r\n    const isInitialMount = useRef(true);\r\n    const cookies = new Cookies()\r\n    const allcookies = cookies.getAll()\r\n    if(!allcookies['storeId']){\r\n        Swal.fire({\r\n            title: '錯誤!',\r\n            text: '404 (STORE_NOT_FOUND)',\r\n            icon: 'error',\r\n            confirmButtonText: 'Ok'\r\n        })\r\n    }\r\n    const getData = ()=>{\r\n        const url = process.env.REACT_APP_API_ENDPOINT + '/stores/' + allcookies['storeId'] + '/products'\r\n        fetch(url,{\r\n            method: 'GET',\r\n            headers:{\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            }\r\n            return response.text().then(res => {\r\n                throw new Error(res)\r\n            })\r\n        }).catch((error) => {\r\n            console.log(error.message)\r\n            let response = JSON.parse(error.message)\r\n            window.alert(\r\n                `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`\r\n            )\r\n            window.location.replace('#/login')\r\n        }).then(myJson =>{\r\n            console.log(myJson)\r\n            setData(myJson)\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        if (isInitialMount.current) {\r\n            isInitialMount.current = false;\r\n            getData()\r\n        }\r\n    })\r\n    return(\r\n        <div className=\"storeAdded\">\r\n            {\r\n                data && data.length>0 && data.map((item)=>\r\n                    <Card key={item.id}>\r\n                        <Card.Img variant=\"top\" src={item.picUrl} />\r\n                        <Card.Body style={{display:\"flex\"}}>\r\n                            <div>\r\n                                <Card.Title>{item.name}</Card.Title>\r\n                                <Card.Text>{item.description}</Card.Text>\r\n                            </div>\r\n                            <div style={{marginLeft:\"auto\"}}>\r\n                                <Button variant=\"primary\" as={Link} to={{pathname:`/order/${item.id}`}}>修改</Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport MenuOption from '../../components/menuoption'\r\nimport {Container} from \"react-bootstrap\";\r\nimport ListAddedFood from '../../components/sells/listaddedfood'\r\n\r\nclass MenuSetting extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>菜單設定</h1>\r\n                <Container>\r\n                    <MenuOption />\r\n                    <br />\r\n                    <ListAddedFood />\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenuSetting","import React from 'react'\r\n\r\nclass Advanced extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>進階設定</h1>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Advanced\r\n\r\n","import React from 'react'\r\nimport {Container} from \"react-bootstrap\";\r\nimport config from \"../config.json\"\r\n\r\nclass CodeofConduct extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n        // eslint-disable-next-line\r\n        let toBeReplace = new RegExp(\"\\n\", \"g\")\r\n        const titleUrl = config['docRoot'] + \"title.json\"\r\n        fetch(titleUrl).then(response =>{\r\n            return response.json()\r\n        }).then(json=>{\r\n            let title = document.getElementById('title')\r\n            title.innerHTML = json['title']\r\n        })\r\n        const url = config['docRoot'] + \"coc.json\"\r\n\r\n        fetch(url)\r\n            .then(response => {\r\n                return response.json()\r\n            }).then(json => {\r\n                for (let i = 0; i < json['title'].length; ++i) {\r\n                    let ptitle = document.createElement('H2')\r\n                    ptitle.textContent = json['title'][i]\r\n\r\n                    document.getElementById('COC').appendChild(ptitle)\r\n                    document.getElementById('COC').innerHTML += \"<p>\" + json['context'][i].replace(toBeReplace, \"<br>\") + \"</p>\"\r\n                }\r\n                let updateTime = document.createElement('H3')\r\n                updateTime.innerText = \"最後更新日期：\"+json['date']\r\n                document.getElementById('COC').appendChild(updateTime)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>行為準則</h1>\r\n                <Container>\r\n                    <br />\r\n                    <p id=\"title\" />\r\n                    <div id=\"COC\" />\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CodeofConduct","import React from 'react'\r\nimport {Container} from \"react-bootstrap\";\r\nimport config from \"../config.json\"\r\n\r\n\r\nclass Privacy extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n        // eslint-disable-next-line\r\n        let toBeReplace = new RegExp(\"\\n\",\"g\")\r\n        let titleUrl = config['docRoot'] + \"title.json\"\r\n\r\n        fetch(titleUrl)\r\n            .then(response =>{\r\n                return response.json()\r\n            }).then(json =>{\r\n                let title = document.getElementById('title')\r\n                title.innerHTML = json['title']\r\n            })\r\n\r\n        let url = config['docRoot'] + \"privacy.json\"\r\n\r\n        fetch(url)\r\n            .then(response => {\r\n                return response.json()\r\n            }).then(json => {\r\n                for (let i = 0; i < json['title'].length; ++i) {\r\n                    let ptitle = document.createElement('H2')\r\n                    ptitle.textContent = json['title'][i]\r\n\r\n                    document.getElementById('policy').appendChild(ptitle)\r\n                    document.getElementById('policy').innerHTML += \"<p>\" + json['context'][i].replace(toBeReplace, \"<br>\") + \"</p>\"\r\n                }\r\n                let updateTime = document.createElement('H3')\r\n                updateTime.innerText = \"最後更新日期：\"+json['date']\r\n                document.getElementById('policy').appendChild(updateTime)\r\n            })\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>隱私權聲明</h1>\r\n                <Container>\r\n                    <br />\r\n                    <p id=\"title\" />\r\n                    <div id='policy' />\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Privacy","import React from 'react'\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Cookies from 'universal-cookie'\r\n//import LoadingSpinner from '../components/loadingspinner'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Signupblock extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const Send = ()=> {\r\n            const passwd = document.getElementById('userInputPasswd')\r\n            const passwdVerify = document.getElementById('userInputPasswdVerification')\r\n            const email = document.getElementById('userInputEmail')\r\n            const token = document.getElementById('activateToken')\r\n            const username = document.getElementById('username')\r\n\r\n            //verify inputs\r\n            if (!(passwd.value && passwdVerify.value && email.value && token.value && username.value)) {\r\n                return\r\n            }\r\n\r\n            //verify and password is not the same\r\n            if (passwd.value !== passwdVerify.value) {\r\n                window.alert('密碼與密碼驗證不符')\r\n                //empty the input box\r\n                passwd.value = ''\r\n                passwdVerify.value = ''\r\n                return\r\n            }\r\n\r\n            //verify email\r\n            let emailRule = /^\\w+((-\\w+)|(\\.\\w+))*@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z]+$/\r\n            //validate ok or not\r\n            if (email.value.search(emailRule) === -1) {\r\n                return\r\n            }\r\n\r\n            //send things to server\r\n            let data = {\r\n                'email': email.value,\r\n                'name': username.value,\r\n                'password': passwd.value,\r\n                'registration_code': token.value\r\n            }\r\n\r\n            let url = process.env.REACT_APP_API_ENDPOINT + '/register'\r\n            //send request\r\n            this.setState({\r\n                loading: true\r\n            })\r\n            fetch(url,{\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                }\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                }\r\n                return response.text().then(res => {\r\n                    throw new Error(res)\r\n                })\r\n            }).catch((error) => {\r\n                console.log(error.message)\r\n                let response = JSON.parse(error.message)\r\n                window.alert(\r\n                    `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`\r\n                )\r\n                this.setState({loading: false})\r\n            }).then(response => {\r\n                // add cookies\r\n                const cookies = new Cookies()\r\n                //cookies.set('session', response['access_token'], {path: '/'})\r\n                cookies.set('alert', '註冊成功', {path: '/'})\r\n                window.location.replace('/login')\r\n                this.setState({loading: false})\r\n            }).catch(err=>{\r\n                console.log(`Failed: ${err}`)\r\n                this.setState({loading: false})\r\n            }).then(this.setState(\r\n                {loading: false\r\n                }))\r\n\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n            <Container>\r\n                <form className={\"signInBlock\"}>\r\n                    <h3 style={{textAlign: 'center'}}>帳號註冊</h3>\r\n                    <div className=\"form-group\">\r\n                        <label>啟動碼</label>\r\n                        <input id=\"activateToken\" type=\"text\" className=\"form-control\" placeholder=\"Enter the activate code\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>電子郵件</label>\r\n                        <input id=\"userInputEmail\" type=\"email\" className=\"form-control\" placeholder=\"Enter email\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>密碼</label>\r\n                        <input id=\"userInputPasswd\" type=\"password\" className=\"form-control\" placeholder=\"Enter password\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>密碼確認</label>\r\n                        <input id=\"userInputPasswdVerification\" type=\"password\" className=\"form-control\" placeholder=\"Enter password\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>使用者名稱</label>\r\n                        <input id=\"username\" type=\"text\" className=\"form-control\" placeholder=\"Enter the username\" required/>\r\n                    </div>\r\n\r\n                    <Row>\r\n                        <Col></Col>\r\n                        <Col></Col>\r\n                        <Col>{this.state.loading? <Link className=\"btn btn-primary btn-block\" type=\"submit\">請稍後</Link>:<Link className=\"btn btn-primary btn-block\" type='submit' onClick={Send}>送出</Link>}</Col>\r\n                    </Row>\r\n                </form>\r\n            </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signupblock","import React from 'react'\r\nimport Signupblock from \"../components/signupblock\";\r\n\r\nclass Signup extends React.Component{\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Signupblock />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup","import React from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Container,\r\n    Form\r\n} from 'react-bootstrap'\r\nimport Cookies from \"universal-cookie\";\r\n\r\nclass Feedback extends React.Component{\r\n    render() {\r\n        const Send = () => {\r\n            //send form\r\n            // data to send\r\n            let name = document.getElementById('nickName')\r\n            let question = document.getElementById('question')\r\n\r\n            if(name.value === ''){\r\n                return\r\n            }\r\n            if(question.value === ''){\r\n                return\r\n            }\r\n\r\n            let toSend = new FormData()\r\n            toSend.append('entry.1239005013',name.value)\r\n            toSend.append('entry.664971969',question.value)\r\n\r\n            //link to send\r\n            const url = 'https://docs.google.com/forms/u/0/d/e/1FAIpQLSdppxPAZlPuLMgelWDJ1wP6fIB4vScvivNrn3BZ9g7etGklCA/formResponse'\r\n\r\n            fetch(url,{\r\n                method: 'POST',\r\n                mode: 'no-cors',\r\n                body: toSend\r\n            }).then(response=>{\r\n                if(response.ok){\r\n                    return response.json()\r\n                }\r\n                return response.text().then(res => {\r\n                    throw new Error(res)\r\n                })\r\n            }).catch(err=>{\r\n                console.log(err.message)\r\n                let response = JSON.parse(err.message)\r\n                window.alert(\r\n                    `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`\r\n                )\r\n                return\r\n            }).then(json=>{\r\n                window.alert('message sent')\r\n                console.log(json)\r\n            })\r\n            window.alert('已經收到你的訊息了\\n我們將會努力改進')\r\n            const cookies = new Cookies()\r\n            cookies.set('alert','傳送成功',{path:'/'})\r\n            document.location.replace('#/feedback')\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>意見反饋</h1>\r\n                <Container>\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>暱稱：</Form.Label>\r\n                            <Form.Control id='nickName' type=\"text\" placeholder=\"小/大明\" required/>\r\n                            <Form.Text className=\"text-muted\">\r\n                                我們絕對不會因為你的暱稱很智障就不理你\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>問題：</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows='5' id='question' required/>\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={Send}>\r\n                            送出\r\n                        </Button>\r\n                    </Form>\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Feedback","import React, {useState} from 'react'\r\nimport {Button, Col, Container, Figure, Row, Spinner} from \"react-bootstrap\";\r\nimport config from \"../../config.json\";\r\nimport Cookies from \"universal-cookie\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nclass ToolBar extends React.Component {\r\n    render() {\r\n        const NewOption = () => {\r\n            const popupUrl = config['project'] + '#/config/new/option'\r\n            const popupWindow = window.open(popupUrl,/*'popUpWindow',*/'', 'location=no,height=500,width=400,top=100,left=300')\r\n            popupWindow.body = \"功能未開放\"\r\n        }\r\n        return (\r\n            <div className=\"optionBar\">\r\n                <ul>\r\n                    <li><Button variant=\"dark\" onClick={NewOption}><i className=\"fa fa-plus\"\r\n                                                                      aria-hidden=\"true\"/>新增選項</Button></li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction MenuConfigurator() {\r\n    const [image, setImage] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n    const [imageUrl, setImageUrl] = useState('')\r\n    const history = useHistory();\r\n    const cookies = new Cookies()\r\n    let allcookies = cookies.getAll()\r\n    const storeId = allcookies['storeId']\r\n\r\n    async function Send() {\r\n        const name = document.getElementById('foodTitle').value\r\n        const subtitle = document.getElementById('foodSub').value\r\n        const price = document.getElementById('foodPrice').value\r\n        const postURL = process.env.REACT_APP_API_ENDPOINT + '/stores/' + storeId + '/products'\r\n\r\n        var data = {\r\n            'name': name,\r\n            'price': price,\r\n            'description': subtitle,\r\n            'store_id': storeId,\r\n            \"image\": imageUrl\r\n        }\r\n        //window.alert(postURL)\r\n        await fetch(postURL, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": `Bearer ${allcookies['session']}`\r\n            }\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            }\r\n            return response.text().then(res => {\r\n                throw new Error(res)\r\n            })\r\n        }).catch((error) => {\r\n            console.log(error.message)\r\n            let response = JSON.parse(error.message)\r\n            window.alert(`${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`)\r\n        }).then(response => {\r\n            console.log(response)\r\n            history.push('/config/menu')\r\n        })\r\n    }\r\n\r\n    function handleChangeImage(evt) {\r\n        console.log(\"Uploading\");\r\n        const storeId = allcookies['storeId']\r\n        var reader = new FileReader();\r\n        var file = evt.target.files[0];\r\n\r\n        reader.onload = function (upload) {\r\n            console.log(file)\r\n            setImage(upload.target.result);\r\n            const formData = new FormData()\r\n            formData.append('image', file)\r\n            setUploading(true)\r\n            fetch(process.env.REACT_APP_API_ENDPOINT + '/stores/' + storeId + '/images', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${allcookies['session']}`\r\n                },\r\n                body: formData\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                }\r\n                return response.text().then(res => {\r\n                    throw new Error(res)\r\n                })\r\n            }).catch((error) => {\r\n                console.log(error.message)\r\n                let response = JSON.parse(error.message)\r\n                window.alert(`${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`)\r\n            }).then(response => {\r\n                console.log(typeof response)\r\n                //window.alert(response)\r\n                setImageUrl(response.result.data)\r\n                setUploading(false)\r\n            })\r\n        };\r\n        reader.readAsDataURL(file);\r\n        console.log(\"Uploaded\");\r\n    }\r\n\r\n    return (\r\n        <form\r\n            className={\"foodBlock\"}\r\n            onSubmit={e => {\r\n                e.preventDefault()\r\n                Send()\r\n            }}\r\n        >\r\n            <div className=\"form-group\">\r\n                <label>食物名</label>\r\n                <input id=\"foodTitle\" type=\"text\" className=\"form-control\" placeholder=\"標題\" required/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>價錢</label>\r\n                <input id=\"foodPrice\" type=\"number\" className=\"form-control\" placeholder=\"價錢\" required/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>副標題</label>\r\n                <input id=\"foodSub\" type=\"text\" className=\"form-control\" placeholder=\"副標(選填)\"/>\r\n            </div>\r\n            <Row>\r\n                <Col>\r\n                    <div className=\"form-group\">\r\n                        <Button as={\"label\"} variant={\"primary\"} hidden={imageUrl !== ''}>\r\n                            上傳圖片\r\n                            <input type=\"file\" name=\"file\"\r\n                                   className=\"upload-file\"\r\n                                   id=\"file\"\r\n                                   onChange={handleChangeImage}\r\n                                   required\r\n                                   hidden\r\n                            />\r\n                        </Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <center>\r\n                        <Spinner hidden={uploading === false} animation={\"border\"}/>\r\n                        <br/>\r\n                        <a href={process.env.REACT_APP_API_HOST + '/' + imageUrl} target=\"_blank\"\r\n                           hidden={!image || uploading}\r\n                           rel=\"noreferrer\">{process.env.REACT_APP_API_HOST + '/' + imageUrl}</a>\r\n                        <br/>\r\n                        <Figure.Image\r\n                            width={300}\r\n                            src={image && !uploading ? process.env.REACT_APP_API_HOST + '/' + imageUrl : \"https://via.placeholder.com/300x180?text=Product+Image\"}\r\n                            resizeMode=\"contain\"\r\n                        />\r\n                    </center>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <div className=\"h-100 align-items-center\">\r\n                    <div id=\"placeToAdd\"/>\r\n                </div>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <button className=\"btn btn-primary btn-block\">送出</button>\r\n                </Col>\r\n            </Row>\r\n        </form>\r\n    )\r\n}\r\n\r\nclass NewMenu extends React.Component {\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0, behavior: 'smooth'})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>新增菜單</h1>\r\n                <Container>\r\n                    <ToolBar/>\r\n                    <br/>\r\n                    <MenuConfigurator/>\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewMenu","import React, {useEffect, useState} from 'react'\r\nimport {Button, Card,Container} from \"react-bootstrap\";\r\n\r\nfunction NewOption(){\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [array,setArray] = useState([])\r\n    const [data,setData] = useState([])\r\n    //const inputOption = document.getElementById('inputOption')\r\n\r\n    const deleteFile = (node) => {\r\n        window.alert(node)\r\n    }\r\n    /*const newOption = () =>{\r\n        if(inputOption.value !== ''){\r\n            if(array.length === 0){\r\n                setArray([inputOption.value])\r\n            }else{\r\n                let temp = array\r\n                temp.push(inputOption.value)\r\n                setArray(temp)\r\n            }\r\n            inputOption.value = ''\r\n        }else{\r\n            window.alert('輸入不得為空')\r\n        }\r\n    }*/\r\n\r\n\r\n    useEffect(()=>{\r\n        const getData = ()=>{\r\n            setData(array)\r\n        }\r\n        getData()\r\n    },[array])\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <h1 style={{textAlign: 'center'}}>選項設定</h1>\r\n            <Container>\r\n                <form >\r\n                    <div className=\"form-group\">\r\n                        <label>新選項</label>\r\n                        <input id=\"inputOption\" type=\"text\" className=\"form-control\" placeholder=\"選項名\" />\r\n                    </div>\r\n                    <Button className=\"btn btn-primary btn-block\">新增</Button>\r\n                </form>\r\n\r\n                <br />\r\n                {\r\n                    data.map((name,index) => {\r\n                        return(\r\n                            <Card key={name}>\r\n                                <Card.Body style={{display:\"flex\"}}>\r\n                                    <div>\r\n                                        <Card.Title>{name}</Card.Title>\r\n                                    </div>\r\n                                    <div style={{marginLeft:\"auto\"}}>\r\n                                        <Button variant=\"primary\" onClick={() => deleteFile(index)}>刪除</Button>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                    )})\r\n                }\r\n            </Container>\r\n\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default NewOption","import React from \"react\";\r\nimport {Card} from \"react-bootstrap\";\r\n\r\n\r\nclass DiskQuota extends React.Component {\r\n    render() {\r\n        return (\r\n            <Card className={[\"m-3\", \"p-3\"]}>\r\n                <div hidden={!this.props.quota.exceed_quota}>\r\n                    儲存空間已滿\r\n                </div>\r\n                <div>\r\n                    儲存空間剩餘 {(this.props.quota.remain / 1024000).toFixed(2)} Mb / {this.props.quota.total} Mb\r\n                    (已用{(((this.props.quota.total - (this.props.quota.remain / 1024000)) / this.props.quota.total) * 100).toFixed(2)}%)\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DiskQuota","import Cookies from \"universal-cookie\";\r\n\r\nexport class API {\r\n    cookies = new Cookies();\r\n\r\n    call(endpoint: string, data: Object, cb) {\r\n        endpoint = process.env.REACT_APP_API_ENDPOINT + endpoint\r\n        for (let str in (data.params || {})) {\r\n            endpoint = endpoint.replaceAll(\":\"+str, data.params[str])\r\n        }\r\n        let body = (typeof data.body === 'object' ? JSON.stringify(data.body) : null)\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Accept': \"application/json\",\r\n            'Authorization': `Bearer ${this.cookies.get('session')}`,\r\n            ...data.headers\r\n        })\r\n        fetch(endpoint, {\r\n            method: data.method,\r\n            body,\r\n            headers\r\n        }).then(r => r.json()).then(cb)\r\n    }\r\n}","import React from \"react\";\r\n\r\nclass Subscription extends React.Component {\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.subscription.plan.name}</td>\r\n                <td>{this.props.subscription.plan.description}</td>\r\n                <td>{this.props.subscription.plan.disk_quota} Mb</td>\r\n                <td>{this.props.subscription.expires_at ?? \"永久有效\"}</td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Subscription","import React from \"react\";\r\n\r\nclass Plan extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.generateECPay = this.generateECPay.bind(this)\r\n    }\r\n\r\n    generateECPay(){\r\n        return (\r\n            process.env.REACT_APP_API_HOST + '/' +\r\n            this.props.storeId + '/' + this.props.plan.id + '/sendOrder'\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.plan.name}</td>\r\n                <td>{this.props.plan.description}</td>\r\n                <td>{this.props.plan.disk_quota} Mb</td>\r\n                <td>\r\n                    <a href={this.generateECPay()} rel=\"noreferrer\" className=\"btn btn-primary\" target={\"_blank\"}>購買</a>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Plan","import React from 'react'\r\nimport {Col, Spinner, Row, Card, Table} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHeadphones} from '@fortawesome/free-solid-svg-icons'\r\nimport DiskQuota from \"./CustomerServiceComponent/DiskQuota\";\r\nimport Cookies from \"universal-cookie/lib\";\r\nimport {API} from \"../../helpers/API\";\r\nimport Subscription from \"./CustomerServiceComponent/Subscription\";\r\nimport Plan from \"./CustomerServiceComponent/Plan\";\r\nimport Swal from \"sweetalert2\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst api = new API()\r\nconst cookies = new Cookies()\r\n\r\nclass CustomerService extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            quota: {},\r\n            loading: false,\r\n            subscriptions: [],\r\n            plans: []\r\n        }\r\n    }\r\n\r\n    getDiskQuota(storeId) {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        api.call('/stores/:store/disk_quota', {\r\n            method: \"GET\",\r\n            params: {\r\n                store: storeId\r\n            }\r\n        }, (quota) => {\r\n            console.log(quota.remain)\r\n            this.setState({\r\n                quota,\r\n                loading: false\r\n            });\r\n        })\r\n    }\r\n\r\n    getSubscriptions(storeId) {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        api.call('/stores/:store/subscriptions', {\r\n            method: \"GET\",\r\n            params: {\r\n                store: storeId\r\n            }\r\n        }, (subscriptions) => {\r\n            console.log(subscriptions)\r\n            this.setState({\r\n                subscriptions,\r\n                loading: false\r\n            });\r\n        })\r\n    }\r\n\r\n    getPlans(storeId) {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        api.call('/plans', {\r\n            method: \"GET\",\r\n            params: {\r\n                store: storeId\r\n            }\r\n        }, (plans) => {\r\n            console.log(plans)\r\n            this.setState({\r\n                plans,\r\n                loading: false\r\n            });\r\n        })\r\n    }\r\n\r\n    componentDidMount(props) {\r\n        window.scrollTo({top: 0, behavior: 'smooth'})\r\n        let storeId = cookies.get('storeId')\r\n        if (!storeId) {\r\n            Swal.fire({\r\n                title: '錯誤!',\r\n                text: '404 (STORE_NOT_FOUND)',\r\n                icon: 'error',\r\n                confirmButtonText: 'Ok'\r\n            }).then(()=>this.props.history.push('/settings/activate'))\r\n        }else{\r\n            this.setState({\r\n                storeId\r\n            })\r\n            this.getDiskQuota(storeId)\r\n            this.getSubscriptions(storeId)\r\n            this.getPlans(storeId)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let subscriptionsElems = this.state.subscriptions.map((subscription, index) => {\r\n            return (\r\n                <Subscription key={subscription.id} subscription={subscription}/>\r\n            )\r\n        })\r\n\r\n        let plansElems = this.state.plans.map((plan, index) => {\r\n            return (<Plan key={plan.id} plan={plan} storeId={this.state.storeId}/>)\r\n        })\r\n        return (\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>客服中心 <FontAwesomeIcon icon={faHeadphones}/></h1>\r\n                <Row>\r\n                    <Col>\r\n                        <center><Spinner animation={\"border\"} hidden={!this.state.loading}/></center>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Card className={[\"m-3\", \"p-3\"]}>\r\n                            <h5>您的店家ID為： <b>{this.state.storeId}</b></h5>\r\n                            <DiskQuota quota={this.state.quota}/>\r\n                            <Card className={[\"m-3\", \"p-3\"]}>\r\n                                您擁有的方案列表\r\n                                <Table>\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th>方案名稱</th>\r\n                                        <th>說明</th>\r\n                                        <th>儲存容量</th>\r\n                                        <th>到期時間</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {subscriptionsElems}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card>\r\n\r\n                            <Card className={[\"m-3\", \"p-3\"]}>\r\n                                可購買的方案列表\r\n                                <div className=\"alert alert-danger\">目前為測試階段請勿付款</div>\r\n                                <Table>\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th>方案名稱</th>\r\n                                        <th>說明</th>\r\n                                        <th>儲存容量</th>\r\n                                        <th>購買</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {plansElems}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(CustomerService)","import React from 'react'\r\nimport {Button, ButtonGroup, Col, Row, Spinner, Toast, ToastBody, ToastHeader} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faStar, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport Cookies from \"universal-cookie/lib\";\r\nimport {API} from \"../../helpers/API\";\r\nimport Echo from 'laravel-echo';\r\nimport axios from \"axios\";\r\nimport IntroJs from 'intro.js'\r\nimport 'intro.js/introjs.css';\r\n\r\nconst api = new API()\r\nconst cookies = new Cookies();\r\nwindow.Pusher = require('pusher-js');\r\nwindow.Echo = new Echo({\r\n    broadcaster: 'pusher',\r\n    wsHost: process.env.REACT_APP_WS_HOST,\r\n    wsPath: process.env.REACT_APP_WS_PATH,\r\n    wsPort: process.env.REACT_APP_WS_PORT,\r\n    disableStats: true,\r\n    key: 'test',\r\n    forceTLS: false,\r\n    authorizer: (channel, options) => {\r\n        return {\r\n            authorize: (socketId, callback) => {\r\n                axios({\r\n                    method: \"POST\",\r\n                    url: process.env.REACT_APP_API_ENDPOINT + '/broadcasting/auth',\r\n                    headers: {\r\n                        Authorization: `Bearer ${cookies.get('session')}`,\r\n                    },\r\n                    data: {\r\n                        socket_id: socketId,\r\n                        channel_name: channel.name,\r\n                    },\r\n                }).then(response => {\r\n                    callback(false, response.data);\r\n                }).catch(error => {\r\n                    callback(true, error);\r\n                });\r\n            }\r\n        };\r\n    },\r\n});\r\n\r\nclass SellsTest extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            transactions: [],\r\n            rating: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount(props) {\r\n        let x = new IntroJs()\r\n        window.scrollTo({top: 0, behavior: 'smooth'})\r\n        setTimeout(() => {\r\n            if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n                // nope\r\n            } else {\r\n                x.start()\r\n            }\r\n\r\n        }, 5000)\r\n        let storeId = cookies.get('storeId')\r\n        if (!storeId) {\r\n            // Out\r\n        } else {\r\n            let that = this\r\n            api.call('/me', {\r\n                method: \"GET\"\r\n            }, (r) => {\r\n                window.Echo.private(`user.${r.id}`)\r\n                    .listen('.transaction.created', function (e) {\r\n                        console.log(e)\r\n                        new Notification(`${e.transaction.id} ${e.transaction?.product?.name}`);\r\n                        that.setState(prev => ({\r\n                            transactions: [\r\n                                e.transaction,\r\n                                ...prev.transactions\r\n                            ]\r\n                        }))\r\n                    });\r\n            })\r\n        }\r\n    }\r\n\r\n    requestNotification() {\r\n        if (Notification && Notification.permission === \"granted\") {\r\n            new Notification(\"測試通知\");\r\n        } else if (Notification && Notification.permission !== \"denied\") {\r\n            Notification.requestPermission(function (status) {\r\n                if (Notification.permission !== status) {\r\n                    Notification.permission = status;\r\n                }\r\n                if (status === \"granted\") {\r\n                    new Notification(\"測試通知\");\r\n                } else {\r\n                    alert(\"你不開通知我也不能提醒你\");\r\n                }\r\n            });\r\n        } else {\r\n            alert(\"你不開通知我也不能提醒你\");\r\n        }\r\n    }\r\n\r\n    transactionsToast() {\r\n        return this.state.transactions.map((value, index) => {\r\n            return (\r\n                <Toast>\r\n                    <ToastHeader>\r\n                        <strong className=\"mr-auto\">({value.id.substring(0, 5)}) {value?.product?.name}</strong>\r\n                    </ToastHeader>\r\n                    <ToastBody>\r\n                        {value?.product?.name} x {value?.qty} <br/>\r\n                        {value?.product?.description}\r\n                    </ToastBody>\r\n                </Toast>\r\n            )\r\n        })\r\n    }\r\n\r\n    handleRate(i) {\r\n        this.setState({\r\n            rating: i\r\n        })\r\n        api.call('/products/:product/rate', {\r\n            params: {'product': ''}\r\n        }, (r) => {\r\n            console.log(r)\r\n        })\r\n    }\r\n\r\n    rating() {\r\n        return (\r\n            <Col>\r\n                <ButtonGroup>\r\n                    {[...Array(6).keys()].slice(1).map(i => {\r\n                        if (i <= this.state.rating)\r\n                            return (<Button key={i} variant={'primary'} className={[\"text-lg\"]}\r\n                                            onClick={this.handleRate.bind(this, i)} data-star={i}>\r\n                                <FontAwesomeIcon icon={faStar}/>\r\n                            </Button>)\r\n                        else\r\n                            return (<Button key={i} variant={'secondary'} className={[\"text-lg\"]}\r\n                                            onClick={this.handleRate.bind(this, i)} data-star={i}>\r\n                                <FontAwesomeIcon icon={faStar}/>\r\n                            </Button>)\r\n                    })}\r\n                </ButtonGroup>\r\n                &nbsp;\r\n                <Button variant={'danger'} className={[\"text-lg\"]}\r\n                        onClick={this.handleRate.bind(this, -1)}>\r\n                    <FontAwesomeIcon icon={faTrash}/>\r\n                </Button>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>訂單列表 <FontAwesomeIcon icon={faStar}/></h1>\r\n                <Row>\r\n                    <Col>\r\n                        <center><Spinner animation={\"border\"} hidden={!this.state.loading}/></center>\r\n                    </Col>\r\n                </Row>\r\n                <Button data-intro='Hello step one!' onClick={this.requestNotification}>傳送通知</Button>\r\n                <Row>\r\n                    {this.rating()}\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {this.transactionsToast()}\r\n                    </Col>\r\n                    <Col>\r\n                        {this.state.transactions.length}{JSON.stringify(this.state.transactions)}\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SellsTest","import React, {useEffect, useState} from 'react'\r\nimport {Spinner} from \"react-bootstrap\";\r\nimport Cookies from 'universal-cookie'\r\n\r\nexport default function ViewBooked(){\r\n    const [loading,setLoading] = useState(true)\r\n    const [data,setData] = useState()\r\n\r\n    const cookies = new Cookies()\r\n    const allcookies = cookies.getAll()\r\n    const storeId = allcookies['storeId']\r\n\r\n    async function getData(){\r\n        try{\r\n            const url = process.env.REACT_APP_API_HOST + '/stores/ ' + storeId + '/transactions'\r\n            let result = await fetch(url, {\r\n                method: 'GET',\r\n                'headers': {\r\n                    'Accept': 'application/json',\r\n                    \"Authorization\": `Bearer ${allcookies['session']}`\r\n                }\r\n            })\r\n            let json = await result.json()\r\n            console.log(json)\r\n        }catch{\r\n            // wrong request or expired session\r\n            // redirect to main page\r\n            cookies.set('alert','操作錯誤，請重試',{path: '/'})\r\n            document.location.href = '/'\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getData()\r\n    },[])\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {loading ?\r\n                <Spinner animation={\"border\"} hidden={!loading}/>\r\n                :\r\n                <h1>Hello</h1>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}","import React, {useEffect, useRef, useState} from 'react'\r\nimport {useLocation} from 'react-router-dom';\r\nimport {Container} from 'react-bootstrap'\r\nimport {\r\n    Box,\r\n    ButtonBase,\r\n    Grid,\r\n    IconButton,\r\n    LinearProgress,\r\n    makeStyles,\r\n    Paper,\r\n    TextField,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {Rating} from \"@material-ui/lab\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport {API} from \"../../helpers/API\";\r\nimport {InfoOutlined} from \"@material-ui/icons\";\r\nimport {green} from \"@material-ui/core/colors\";\r\n\r\nconst api = new API();\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin: 'auto',\r\n        maxWidth: 500,\r\n    },\r\n    image: {\r\n        width: 128,\r\n        height: 128,\r\n    },\r\n    img: {\r\n        margin: 'auto',\r\n        display: 'block',\r\n        maxWidth: '100%',\r\n        maxHeight: '100%',\r\n    },\r\n    miniIcon: {\r\n        width: 60,\r\n        height: 60,\r\n    }\r\n}));\r\n\r\nfunction Result(props) {\r\n    // props.product\r\n    /*const style = {\r\n        height: 32,\r\n    };*/\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm container>\r\n                        <Grid item xs container direction=\"column\" spacing={2}>\r\n                            <Grid item xs>\r\n                                <Box fontSize={1} color={green} hidden={parseFloat(props.product.weight) <= 1.0}>\r\n                                    <InfoOutlined style={{fontSize: 12}}/>\r\n                                    &nbsp;廣告\r\n                                </Box>\r\n                                <Typography gutterBottom variant=\"h6\">\r\n                                    {props.product.name}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" gutterBottom>\r\n                                    {props.product.description}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                    ID: {props.product.id}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                                    <Rating name=\"read-only\" value={parseFloat(props.product.ratings_avg)} readOnly/>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"subtitle1\">{props.product.price}元</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <ButtonBase className={classes.image}>\r\n                            <img className={classes.img} alt={props.product.name} src={props.product.image}/>\r\n                        </ButtonBase>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function Query() {\r\n    const isInitState = useRef(true);\r\n    const [term, setTerm] = useState('');\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(false)\r\n    let location = useLocation();\r\n    const getProductQueryResult = React.useCallback((q) => {\r\n        setLoading(true)\r\n        api.call('/products/query', {\r\n            method: \"POST\",\r\n            body: {\r\n                term: (q ?? term)\r\n            }\r\n        }, r => {\r\n            setProducts(r)\r\n            setLoading(false)\r\n        })\r\n    }, [term])\r\n    useEffect(() => {\r\n        if (isInitState.current) {\r\n            isInitState.current = false\r\n            window.scrollTo({top: 0, behavior: 'smooth'})\r\n            let searchTerm = (new URLSearchParams(location.search)).get('q');\r\n            setTerm(searchTerm)\r\n            getProductQueryResult(searchTerm);\r\n        }\r\n    }, [location.search, getProductQueryResult])\r\n\r\n    function handleTermChange(e) {\r\n        setTerm(e.target.value)\r\n    }\r\n\r\n    let resultElems = products.map((product, index) => {\r\n        return (\r\n            <div key={product.id}>\r\n                <Result product={product}/>\r\n                <br/>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <React.Fragment>\r\n            <LinearProgress hidden={!loading}/>\r\n            <h1 style={{textAlign: 'center'}}>搜尋結果</h1>\r\n            <Container>\r\n                <TextField\r\n                    id=\"filled-full-width\"\r\n                    label=\"搜尋食物\"\r\n                    style={{margin: 8}}\r\n                    placeholder=\"想吃的東西\"\r\n                    helperText=\"想吃的東西\"\r\n                    fullWidth\r\n                    value={term}\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={handleTermChange}\r\n                    variant=\"filled\"\r\n                    InputProps={{\r\n                        endAdornment:\r\n                            (<IconButton onClick={getProductQueryResult}>\r\n                                <SearchIcon/>\r\n                            </IconButton>)\r\n                    }}\r\n                />\r\n                {resultElems}\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {HashRouter, Route, Switch} from 'react-router-dom'\r\n\r\nimport OfflineDetect from \"./components/offlineDetect\";\r\nimport Navibar from \"./components/navigationbar\";\r\nimport Notification from \"./components/Notification\";\r\nimport Footer from \"./components/footer\";\r\n\r\nimport Homepage from './page/main'\r\nimport Login from './page/login'\r\nimport Purchase from './page/customer/purchase'\r\nimport Order from './page/customer/order'\r\nimport Settings from './page/settings'\r\nimport Restaurant from './page/customer/restaurant'\r\nimport Histories from './page/customer/history'\r\nimport StoreSetting from './page/sells/store'\r\nimport MenuSetting from './page/sells/menu'\r\nimport Advanced from './page/sells/advanced'\r\nimport CodeOfConduct from \"./page/codeofconduct\"\r\nimport Privacy from './page/privacy'\r\nimport Signup from './page/signup'\r\nimport Feedback from './page/feedback';\r\nimport NewMenu from './page/sells/newmenu'\r\nimport NewOption from './page/sells/newoption'\r\nimport CustomerService from \"./page/sells/service\";\r\nimport SellsTest from \"./page/sells/test\";\r\nimport ViewBooked from './page/sells/viewbooked'\r\nimport Query from \"./page/customer/query\";\r\n\r\nfunction App() {\r\n  return (\r\n      <HashRouter>\r\n          <OfflineDetect />\r\n          <Navibar />\r\n          <Notification />\r\n        <Switch>\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/booked\" component={ViewBooked}/>\r\n            <Route path=\"/query\" component={Query}/>\r\n            <Route path=\"/restaurant\" component={Restaurant}/>\r\n            <Route path=\"/settings\" component={Settings} />\r\n            <Route path=\"/purchase/:store/:product\" component={Purchase} />\r\n            <Route path=\"/order/:storeId\" component={Order} />\r\n            <Route path=\"/history\" component={Histories} />\r\n            <Route path=\"/service\" component={CustomerService} />\r\n            <Route path=\"/sells/test\" component={SellsTest} />\r\n            <Route path='/config/new/option' component={NewOption}/>\r\n            <Route path=\"/config/store\" component={StoreSetting} />\r\n            <Route path=\"/config/menu/new\" component={NewMenu}/>\r\n            <Route path=\"/config/menu\" component={MenuSetting} />\r\n            <Route path=\"/config/advanced/:id\" component={Advanced} />\r\n            <Route path=\"/privacy\" component={Privacy}/>\r\n            <Route path=\"/COC\" component={CodeOfConduct} />\r\n            <Route path=\"/signup\" component={Signup} />\r\n            <Route path=\"/feedback\" component={Feedback}/>\r\n            <Route path=\"/\" component={Homepage} />\r\n        </Switch>\r\n        <Footer />\r\n      </HashRouter>\r\n\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n//import {register} from \"./serviceWorkerRegistration\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\n//serviceWorkerRegistration.register({\r\n//     onUpdate: registration =>{\r\n//         alert('New version discovered! Ready to update?')\r\n//         if(registration && registration.waiting){\r\n//             registration.waiting.postMessage({type: 'SKIP_WAITING'})\r\n//         }\r\n//         window.location.reload()\r\n//     }\r\n// });\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}