{"version":3,"sources":["components/offlineDetect.js","components/navigationbar.js","components/Notification.js","components/footer.js","components/carousel.js","serviceWorkerRegistration.js","components/pwa updater.js","page/main.js","components/googleOauth.js","page/login.js","components/customers/foodcontent.js","page/customer/purchase.js","components/listfood.js","page/customer/order.js","helpers/Log.js","settings.js","components/settingsOption.js","components/settingconfiguration/settingConfigure.js","page/settings.js","components/liststore.js","page/customer/restaurant.js","components/transaction.js","page/customer/history.js","page/sells/store.js","components/menuoption.js","components/sells/listaddedfood.js","page/sells/menu.js","page/sells/advanced.js","page/codeofconduct.js","page/privacy.js","components/signupblock.js","page/signup.js","page/feedback.js","page/sells/newmenu.js","page/sells/newoption.js","page/sells/CustomerServiceComponent/DiskQuota.js","helpers/API.js","page/sells/CustomerServiceComponent/Subscription.js","page/sells/CustomerServiceComponent/Plan.js","page/sells/service.js","page/sells/test.js","App.js","reportWebVitals.js","index.js"],"names":["OfflineDetect","polling","url","config","style","textAlign","className","React","Component","Navibar","props","combination","Cookies","getAll","send","push","state","isGoogle","isSells","isLoggedIn","username","toHello","this","Fragment","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","as","to","rel","target","onClick","cookies","remove","set","path","window","location","replace","Notification","alert","alertSentence","Footer","Container","Row","Col","Carousels","Carousel","src","alt","Caption","isLocalhost","Boolean","hostname","match","register","navigator","URL","process","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","PwaUpdater","useState","showReload","setShowReload","reloadPage","a","serviceWorkerRegistration","useEffect","waiting","postMessage","type","Snackbar","open","message","anchorOrigin","vertical","horizontal","action","Button","color","size","Homepage","scrollTo","top","behavior","GoogleOauth","googleCloudPlatformIdActual","responseGoogle","google_response","JSON","stringify","data","method","body","Headers","ok","json","text","res","Error","parse","undefined","profileObj","givenName","err","clientId","buttonText","onFailure","hostedDomain","cookiePolicy","Login","loading","hidden","Spinner","animation","placeholder","email","document","getElementById","passwd","value","search","baseURL","setState","loginResponse","meUrl","FoodContent","setTitle","picture","setPicture","price","setPrice","description","setDescription","comment","setComment","history","useHistory","store","product","Swal","fire","icon","confirmButtonText","allcookies","getData","Figure","Image","width","resizeMode","lg","TextareaAutosize","rows","onChange","event","display","marginLeft","variant","confirmText","confirm","html","Purchase","params","ListFood","setData","storeId","myJson","i","length","map","item","Card","Img","picUrl","Body","Title","name","Text","pathname","Order","GreatLog","msg","toUpperCase","setting","configuration","afterFetch","SettingsOption","SettingConfigure","urlSelected","split","collection","init","selected","go","localizedMessage","code","withRouter","Settings","xs","ListStore","setLoading","Restaurant","Transaction","transaction","setTransaction","fetchURL","r","Update","product_id","Histories","StoreSetting","MenuOption","ListAddedFood","MenuSetting","Advanced","CodeofConduct","toBeReplace","RegExp","titleUrl","innerHTML","ptitle","createElement","textContent","appendChild","updateTime","innerText","Privacy","Signupblock","required","passwdVerify","token","Signup","Feedback","Form","Group","Label","Control","question","toSend","FormData","append","mode","ToolBar","popupUrl","aria-hidden","MenuConfigurator","image","setImage","uploading","setUploading","imageUrl","setImageUrl","subtitle","postURL","onSubmit","e","preventDefault","Send","evt","reader","FileReader","file","files","onload","upload","result","formData","readAsDataURL","NewMenu","NewOption","array","index","node","DiskQuota","quota","exceed_quota","remain","toFixed","total","API","endpoint","cb","str","slice","replaceAll","Subscription","subscription","plan","disk_quota","expires_at","Plan","generateECPay","bind","api","CustomerService","subscriptions","plans","call","getDiskQuota","getSubscriptions","getPlans","subscriptionsElems","plansElems","faHeadphones","Table","Pusher","require","Echo","broadcaster","wsHost","wsPath","disableStats","key","forceTLS","authorizer","channel","options","authorize","socketId","callback","axios","Authorization","socket_id","channel_name","SellsTest","transactions","x","IntroJs","setTimeout","start","that","private","listen","prev","permission","requestPermission","Toast","ToastHeader","substring","ToastBody","qty","data-intro","requestNotification","transactionsToast","App","component","CodeOfConduct","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.81d976e6.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Offline} from \"react-detect-offline\";\r\n\r\nimport config from '../config.json'\r\n\r\nclass OfflineDetect extends React.Component{\r\n    render(){\r\n        const polling = {url: config['docRoot']+'status.json'}\r\n        return(\r\n            <Offline polling={polling}>\r\n                <p style={{textAlign: 'center'}} className=\"p-3 mb-2 bg-danger text-white\">離線中，請檢察您的連線狀況</p>\r\n            </Offline>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OfflineDetect","import React from 'react'\r\n\r\nimport {\r\n    Navbar,\r\n    Nav,\r\n    NavDropdown,\r\n} from 'react-bootstrap'\r\n\r\nimport Cookies from 'universal-cookie'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navibar extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        const cookies = new Cookies()\r\n        const combination = cookies.getAll()\r\n        let send = []\r\n        combination['isGoogle'] ? send.push(true):send.push(false)\r\n        combination['isSells'] ? send.push(true):send.push(false)\r\n        combination['session'] ? send.push(true):send.push(false)\r\n        this.state = {\r\n            isGoogle: send[0],\r\n            isSells: send[1],\r\n            isLoggedIn: send[2],//!cookies.get('loggedin') || true\r\n            username: combination['userName'] || \"Anonymous\",\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const signOut = ()=>{\r\n            //normal account signout\r\n            //window.alert('logging out')\r\n            //remove cookie\r\n            const cookies = new Cookies()\r\n            cookies.remove('id')\r\n            cookies.remove('isGoogle')\r\n            cookies.remove('isSells')\r\n            cookies.remove('session')\r\n            cookies.remove('userName')\r\n            cookies.remove('storeId')\r\n            cookies.remove('name')\r\n            cookies.set('alert','登出成功',{path: '/'})\r\n            //reload page\r\n            window.location.replace('/')\r\n        }\r\n        const toHello = \"嗨! \"+this.state.username\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/\">美廣訂餐系統</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"#/restaurant\">餐廳</Nav.Link>\r\n                            {this.state.isSells && <NavDropdown title=\"店家管理\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"#/config/store\">商家設定</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#/config/menu\">菜單設定</NavDropdown.Item>\r\n                                <NavDropdown.Item as={Link} to=\"/service\">客服服務</NavDropdown.Item>\r\n                            </NavDropdown>}\r\n                            <NavDropdown title=\"相關連結\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"https://sites.google.com/view/tnfshsu/\" rel=\"noreferrer noopener\" target=\"_blank\">學聯會</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"https://tnfsacec.github.io\" rel=\"noreferrer noopener\" target=\"_blank\">選委會</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                        {this.state.isLoggedIn ? <NavDropdown title={toHello} id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"#/history\">歷史紀錄</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#/settings\">設定</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={signOut}>登出</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            :\r\n                            <Nav>\r\n                                <Nav.Link href=\"#/signup\">註冊</Nav.Link>\r\n                                <Nav.Link href=\"#/login\">登入</Nav.Link>\r\n                            </Nav>}\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navibar","import React from 'react'\r\n\r\nimport Cookies from \"universal-cookie\";\r\n\r\nclass Notification extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let send = []\r\n        const cookies = new Cookies()\r\n        const combination = cookies.getAll()\r\n        combination['alert'] ? send.push(true) : send.push(false)\r\n        this.state = {\r\n            alert: send[0],\r\n            alertSentence: combination['alert']\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const cookies = new Cookies()\r\n        cookies.remove('alert')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    this.state.alert &&\r\n                    <p className=\"p-3 mb-2 bg-success text-white\">\r\n                        {this.state.alertSentence}\r\n                    </p>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification","import React from 'react'\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport config from \"../config.json\";\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <br/>\n                <div className={\"p-3 mb-2 bg-dark text-white \"}>\n                    <Container>\n                        <br/>\n                        <Row>\n                            <Col>\n                                <Link to=\"/privacy\">隱私權聲明</Link><br/>\n                                <Link to=\"/COC\">行為準則</Link><br/>\n                                <Link to=\"/feedback\">意見反饋</Link>\n                            </Col>\n                            <Col>\n                                關於我們：<br />\n                                <a href='https://sivir.pw' rel=\"noreferrer noopener\" target='_blank'>Milliax</a>、\n                                <a href='https://hsuan.app/' rel=\"noreferrer noopener\" target='_blank'>Hsuan1117</a>、\n                                <a href='https://neodoggy.github.io/' rel=\"noreferrer noopener\"\n                                   target='_blank'>Neodoggy</a>\n                                <br/>\n                                <br/>\n                                <span>version: {config['version']}</span>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Footer","import React from 'react'\r\n\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n\r\nclass Carousels extends React.Component{\r\n    render(){\r\n        return(\r\n            <Carousel>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src=\"https://media.wired.com/photos/598e35fb99d76447c4eb1f28/master/pass/phonepicutres-TA.jpg\"\r\n                        alt=\"First slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>First slide label</h3>\r\n                        <p>對不起我盜圖</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src=\"https://media.wired.com/photos/598e35fb99d76447c4eb1f28/master/pass/phonepicutres-TA.jpg\"\r\n                        alt=\"Second slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>Second slide label</h3>\r\n                        <p>對不起我盜圖</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src=\"https://media.wired.com/photos/598e35fb99d76447c4eb1f28/master/pass/phonepicutres-TA.jpg\"\r\n                        alt=\"Third slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>Third slide label</h3>\r\n                        <p>對不起我盜圖</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Carousels","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {useEffect, useState} from 'react'\r\nimport { Snackbar, Button } from '@material-ui/core';\r\nimport * as serviceWorkerRegistration from '../serviceWorkerRegistration';\r\n\r\nexport default function PwaUpdater(){\r\n    const [showReload, setShowReload] = useState(false)\r\n    //const [waitingWorker, setWaitingWorker] = useState<ServiceWorker | null>(null)\r\n\r\n    const onSWUpdate = () => {\r\n        serviceWorkerRegistration.register({\r\n            onUpdate: registration =>{\r\n                window.alert('發現新版本！！！ 點此立即更新')\r\n                if(registration && registration.waiting){\r\n                    registration.waiting.postMessage({type: 'SKIP_WAITING'})\r\n                }\r\n                window.location.reload()\r\n            }\r\n        });\r\n    }\r\n    async function reloadPage (){\r\n        await serviceWorkerRegistration.register({})\r\n        setShowReload(false)\r\n        window.location.reload(true)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        onSWUpdate()\r\n    },[])\r\n\r\n    return(\r\n        <Snackbar\r\n            open={showReload}\r\n            message=\"A new version is available!\"\r\n            onClick={reloadPage}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            action={\r\n                <Button\r\n                    color=\"inherit\"\r\n                    size=\"small\"\r\n                    onClick={reloadPage}\r\n                >\r\n                    Reload\r\n                </Button>\r\n            }\r\n        />\r\n    )\r\n}","import React from 'react'\nimport Carousels from '../components/carousel'\nimport PWAUpdater from '../components/pwa updater'\n\n\nimport {\n    Container,\n    //Button\n} from 'react-bootstrap'\n//import {API} from \"../helpers/API\";\n\nclass Homepage extends React.Component {\n    componentDidMount() {\n        window.scrollTo({top: 0, behavior: 'smooth'})\n    }\n\n    /*Test(){\n        console.log(1)\n        let api = new API()\n        api.call('/stores',{},(r)=>{\n            console.log(r)\n        })\n    }*/\n\n    render() {\n        return (\n            <React.Fragment>\n                <Container>\n                    <PWAUpdater/>\n                    {/*<Picture />*/}\n                    <Carousels/>\n                    {/*<Button onClick={this.Test}>Test</Button>*/}\n                </Container>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Homepage\n","import React from 'react'\r\n\r\nimport GoogleLogin from 'react-google-login'\r\nimport Cookies from 'universal-cookie'\r\nimport config from '../config.json'\r\n\r\nclass GoogleOauth extends React.Component {\r\n    render() {\r\n        const googleCloudPlatformIdActual = config['googleCloudPlatformId'] + \".apps.googleusercontent.com\"\r\n        const responseGoogle = (google_response) => {\r\n            console.log(JSON.stringify(google_response))\r\n            // send request to backend\r\n            let data = {\r\n                'token': google_response['accessToken'],\r\n            }\r\n\r\n            const url = config['baseURL'] + 'google'\r\n            fetch(url, {\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                })\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                }\r\n                return response.text().then(res => {\r\n                    throw new Error(res)\r\n                })\r\n            }).catch((error) => {\r\n                console.log(error.message)\r\n                let response = JSON.parse(error.message)\r\n                window.alert(\r\n                    `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`\r\n                )\r\n            }).then((response) => {\r\n                // add cookies\r\n                if(google_response['profileObj']['givenName'] === undefined){\r\n                    return\r\n                }\r\n                const cookies = new Cookies()\r\n                cookies.set('session', response['access_token'], {path: '/'})\r\n                cookies.set('isGoogle', 'true', {path: '/'})\r\n                cookies.set('alert', '登入成功', {path: '/'})\r\n                cookies.set('userName', google_response?.profileObj?.givenName, {path: '/'})\r\n\r\n                window.location.replace('/')\r\n            }).catch(err=>{\r\n                console.log(`Failed: ${err}`)\r\n            })\r\n        };\r\n        return (\r\n            <>\r\n                <GoogleLogin\r\n                    clientId={googleCloudPlatformIdActual}\r\n                    buttonText=\"使用 Google 登入\"\r\n                    onSuccess={responseGoogle}\r\n                    onFailure={responseGoogle}\r\n                    hostedDomain={config['gmailSuffix']}\r\n                    cookiePolicy={\"single_host_origin\"}\r\n                    //uxMode={\"redirect\"}\r\n                    //redirectUri={config['project']}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GoogleOauth\r\n","import React from 'react'\n//import Signinblock from \"../components/signinblock\";\nimport {Col, Container, Row, Spinner} from \"react-bootstrap\";\nimport GoogleOauth from \"../components/googleOauth\";\nimport config from \"../config.json\";\nimport Cookies from \"universal-cookie\";\nimport {Link} from 'react-router-dom'\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false\n        }\n    }\n\n\n    componentDidMount() {\n        window.scrollTo({top: 0, behavior: 'smooth'})\n    }\n\n    render() {\n        const Send = () => {\n            const email = document.getElementById('userInputEmail')\n            const passwd = document.getElementById('userInputPasswd')\n\n            let emailRule = /^\\w+((-\\w+)|(\\.\\w+))*@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z]+$/\n            //validate ok or not\n            if (email.value.search(emailRule) === -1) {\n                return\n            }\n            //send request\n            let data = {\n                'email': email.value,\n                'password': passwd.value,\n            }\n            let url = config.baseURL + 'login'\n            this.setState({\n                loading: true\n            })\n            fetch(url, {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: new Headers({\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                })\n            }).then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n                return response.text().then(res => {\n                    throw new Error(res)\n                })\n            }).catch((error) => {\n                console.log(error.message)\n                let response = JSON.parse(error.message)\n                window.alert(`${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`)\n            }).then(response => {\n                // add cookies\n                const cookies = new Cookies()\n                cookies.set('session', response['access_token'], {path: '/'})\n                cookies.set('alert', '登入成功', {path: '/'})\n                return response\n            }).catch(err => {\n                console.log(`Failed: ${err}`)\n            }).then(loginResponse => {\n                //get account information\n                const meUrl = config['baseURL'] + 'me'\n                fetch(meUrl, {\n                    method: 'GET',\n                    headers: {\n                        \"Accept\": \"application/json\",\n                        \"Authorization\": `Bearer ${loginResponse['access_token']}`\n                    }\n                }).then(response => {\n                    if (response.ok) {\n                        return response.json()\n                    }\n                    return response.text().then(err => {\n                        throw new Error(err)\n                    })\n                }).catch(error => {\n                    console.log(error.message)\n                    let response = JSON.parse(error.message)\n                    window.alert(`${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`)\n                }).then(response => {\n                    const cookies = new Cookies()\n                    cookies.set('userName', response['name'], {path: '/'})\n                    cookies.set('id', response['id'], {path: '/'})\n                    cookies.set('isSells', true, {path: '/'})\n                    if (response['stores'][0] !== undefined) {\n                        cookies.set('storeId', response['stores'][0]['id'], {path: '/'})\n                    }\n                    this.setState({\n                        loading: false\n                    })\n                    document.location.replace('/')\n                })\n            })\n\n        }\n        return (\n            <React.Fragment>\n                <Container>\n                    <form className={\"signInBlock\"}>\n                        <h3 style={{textAlign: 'center'}} className={\"p-2\"}>登入</h3>\n                        <center hidden={!this.state.loading}>\n                            <Spinner animation={\"border\"} />\n                        </center>\n\n                        <div className=\"form-group\">\n                            <label>電子郵件</label>\n                            <input id=\"userInputEmail\" type=\"email\" className=\"form-control\" placeholder=\"Enter email\"/>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>密碼</label>\n                            <input id=\"userInputPasswd\" type=\"password\" className=\"form-control\"\n                                   placeholder=\"Enter password\"/>\n                        </div>\n                        <Row>\n                            <Col/>\n                            <Col/>\n                            <Col><Link className=\"btn btn-primary btn-block\" onClick={Send}>Submit</Link></Col>\n                        </Row>\n                        <hr/>\n                        <label>其他登入方式？</label>\n                        <div className={\"otherLoginMethod\"}>\n                            <GoogleOauth/>\n                        </div>\n                    </form>\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Login","import React, {useEffect, useState} from 'react'\r\nimport config from '../../config.json'\r\nimport {Container, Row, Col, Figure, Button} from 'react-bootstrap'\r\nimport {useHistory} from 'react-router-dom'\r\nimport Cookies from 'universal-cookie'\r\nimport Swal from 'sweetalert2'\r\nimport {TextareaAutosize} from \"@material-ui/core\";\r\n\r\nexport default function FoodContent(props) {\r\n    const [title, setTitle] = useState('')\r\n    const [picture, setPicture] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [comment, setComment] = useState('')\r\n    const history = useHistory()\r\n    const URL = config['baseURL'] + 'stores/' + props.store + '/products/' + props.product;\r\n\r\n    async function getData() {\r\n        fetch(URL, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n            }\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            }\r\n            return response.text().then(err => {\r\n                throw new Error(err)\r\n            })\r\n        }).then(response => {\r\n            //console.log(response)\r\n            setPrice(response['price'])\r\n            setDescription(response['description'])\r\n            setTitle(response['name'])\r\n            setPicture(response['image'])\r\n        }).catch(error => {\r\n            //console.log(error.message)\r\n            let response = JSON.parse(error.message)\r\n            Swal.fire({\r\n                title: '錯誤!',\r\n                text: `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`,\r\n                icon: 'error',\r\n                confirmButtonText: 'Ok'\r\n            }).then(() => history.push('/'))\r\n        })\r\n    }\r\n\r\n    const cookies = new Cookies()\r\n    const allcookies = cookies.getAll()\r\n\r\n    function Send() {\r\n        const confirmText =\r\n            `請確認您的訂購資訊\r\n名稱：${title}\r\n售價：${price}\r\n其他建議：(功能未開放)\r\n按 OK 送出；cancel 取消`\r\n        if (window.confirm(confirmText)) {\r\n            //window.alert('Ok')\r\n            // send transaction\r\n            const url = config['baseURL'] + 'transactions'\r\n            fetch(url, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    \"name\": title,\r\n                    \"qty\": 1,\r\n                    \"store_id\": props.store,\r\n                    \"product_id\": props.product,\r\n                    \"comment\": comment,\r\n                    \"options\": {}\r\n                }),\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${allcookies['session']}`\r\n                }\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                }\r\n                return response.text().then(res => {\r\n                    throw new Error(res)\r\n                })\r\n            }).then((res) => {\r\n                // Transaction Made\r\n                Swal.fire({\r\n                    title: '訂購成功!',\r\n                    html: (\r\n                        `感謝您利用本系統訂購產品<br>` +\r\n                        `請記得於選取時間取餐，謝謝<br>` +\r\n                        `您的交易ID為： <b>${res.id}</b>`),\r\n                    icon: 'success',\r\n                    confirmButtonText: 'Ok'\r\n                }).then(() => history.push('/'))\r\n            }).catch((error) => {\r\n                // Transaction Error\r\n                console.log(error)\r\n                let response = JSON.parse(error.message)\r\n                Swal.fire({\r\n                    title: '錯誤!',\r\n                    text: `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`,\r\n                    icon: 'error',\r\n                    confirmButtonText: 'Ok'\r\n                }).then(() => history.push('/'))\r\n            })\r\n        } else {\r\n            // fallback to center\r\n            Swal.fire({\r\n                title: '錯誤!',\r\n                text: `訂單未成立`,\r\n                icon: 'error',\r\n                confirmButtonText: 'Ok'\r\n            }).then()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container>\r\n                <br/>\r\n                <Row>\r\n                    <Col>\r\n                        <Figure>\r\n                            <Figure.Caption className={\"text-center\"}>\r\n                                {title}\r\n                            </Figure.Caption>\r\n                            <Figure.Image\r\n                                width={300}\r\n                                alt=\"餐點的照片\"\r\n                                src={config['baseURL'].replace(/\\/api/,'') + picture}\r\n                                resizeMode=\"contain\"\r\n                            />\r\n                        </Figure>\r\n                    </Col>\r\n                    <Col>{description}</Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <h5>建議售價：{price}</h5>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={9}>\r\n                        <TextareaAutosize className=\"form-control\" placeholder=\"留言\" rows=\"5\"\r\n                                          onChange={event => setComment(event.target.value)}\r\n                                          value={comment}/>\r\n                    </Col>\r\n                    <Col lg={3}>\r\n                        <div style={{display: \"flex\"}}>\r\n                            <div style={{marginLeft: \"auto\"}}>\r\n                                <Button variant=\"primary\" onClick={Send}>訂購</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport FoodContent from '../../components/customers/foodcontent'\r\n\r\nclass Purchase extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>訂餐</h1>\r\n                {/*餐點內容*/}\r\n                <FoodContent store={this.props.match.params.store} product={this.props.match.params.product}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Purchase","import React,{useState,useEffect} from 'react'\n\nimport config from '../config.json'\n\nimport {\n    Card,\n    Button\n} from 'react-bootstrap'\nimport {Link, useHistory} from \"react-router-dom\";\n\nfunction ListFood(props){\n    const [data,setData] = useState([])\n    const history = useHistory();\n    async function getData(){\n        const url = config['baseURL'] + \"stores/\" + props.storeId + '/products'\n        fetch(url,{\n            method: 'GET'\n        }).then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n            return response.text().then(res => {\n                throw new Error(res)\n            })\n        }).catch((error) => {\n            console.log(error.message)\n            let response = JSON.parse(error.message)\n            window.alert(\n                `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`\n            )\n            history.push('/login')\n        }).then(myJson =>{\n            console.log(myJson)\n            for(let i = 0;i < myJson.length;++i){\n                myJson[i]['storeId'] = props.storeId\n            }\n            setData(myJson)\n        })\n    }\n    useEffect(()=>{\n        getData()\n    },)\n    return(\n        <div className=\"ListStore\">\n            {\n                data && (data.length>0 ? data.map((item)=>\n                    <Card>\n                        <Card.Img variant=\"top\" src={item.picUrl} />\n                        <Card.Body style={{display:\"flex\"}}>\n                            <div>\n                                <Card.Title>{item.name}</Card.Title>\n                                <Card.Text>{item.description}</Card.Text>\n                            </div>\n                            <div style={{marginLeft:\"auto\"}}>\n                                <Button variant=\"primary\" as={Link} to={{pathname:`/purchase/${item.storeId}/${item.id}`}}>立即前往</Button>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                ):<React.Fragment><br /><h2 style={{textAlign: 'center'}}>查無資料</h2></React.Fragment>)\n            }\n        </div>\n    )\n}\n\nexport default ListFood","import React from 'react'\r\nimport ListFood from '../../components/listfood'\r\n\r\nclass Order extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>吃什麼</h1>\r\n                <ListFood id={this.props.match.params.storeId}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order","export function GreatLog(type, msg) {\n    console.log(`[${type.toUpperCase()}] ${msg}\"`)\n}","import config from \"./config.json\"\nimport Cookies from \"universal-cookie/lib\";\nimport {GreatLog} from \"./helpers/Log\";\n\nconst cookies = new Cookies();\n\nexport const setting = [\n    {\n        \"name\": \"啟動商店功能\",\n        \"url\": \"/settings/activate\"\n        //what to do\n\n    },\n    {\n        \"name\": \"變更商店名\",\n        \"url\": \"/settings/change_name\"\n    },\n    {\n        \"name\": \"變更密碼\",\n        \"url\": \"/settings/change_password\"\n    }\n]\n\nexport const configuration = {\n    \"change_name\": {\n        \"title\": \"變更商店名\",\n        \"hint\": \"請輸入商店名\",\n        \"placeholder\": \"新商店名\",\n        \"submitUri\": config['baseURL'] + 'stores',\n        \"method\": \"PUT\",\n        afterFetch(res) {\n            GreatLog('debug', res.id)\n            cookies.set('storeId', res.id)\n        }\n    },\n    \"change_password\": {\n        \"title\": \"變更密碼\",\n        \"hint\": \"請輸入新密碼\",\n        \"placeholder\": \"新密碼\",\n        \"submitUri\": config['baseURL'] + 'change_password',\n        \"method\": \"POST\",\n        \"return\": [\"newpassword\"]\n    },\n    \"activate\": {\n        \"title\": \"啟動商店功能\",\n        \"hint\": \"請輸入商店名\",\n        \"placeholder\": \"商店名\",\n        \"submitUri\": config['baseURL'] + 'stores',\n        \"method\": \"POST\",\n        \"return\": [\"name\"],\n        afterFetch(res) {\n            GreatLog('debug', res.id)\n            cookies.set('storeId', res.id)\n        }\n    }\n}","import React from 'react'\nimport {\n    Link,\n} from 'react-router-dom'\nimport {Card} from \"react-bootstrap\";\nimport {setting} from '../settings.js'\n\n\nfunction SettingsOption(){\n    return(\n        setting.map((item)=>\n            <Card>\n                <Card.Body style={{display:\"flex\"}}>\n                    <div>\n                        <Link to={item.url}>{item.name}</Link>\n                    </div>\n                </Card.Body>\n            </Card>\n        )\n    )\n}\n\n\n\nexport default SettingsOption","import React from 'react'\n\nimport {configuration} from \"../../settings\";\nimport Cookies from \"universal-cookie\";\nimport {withRouter} from \"react-router-dom\"\nimport Swal from \"sweetalert2\";\n\nclass SettingConfigure extends React.Component {\n\n    render() {\n        const browserUrl = document.location.href\n        const splitUrl = browserUrl.split('/')\n        const urlSelected = splitUrl[5]\n\n        const Send = () => {\n            const cookies = new Cookies()\n            const collection = cookies.getAll()\n            if (!collection['session']) {\n                window.alert(`Session expired`)\n                document.location.replace('/')\n            }\n            let init = {\n                method: configuration[urlSelected]['method'],\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Authorization\": `Bearer ${collection['session']}`,\n                    \"Content-Type\": \"application/json\"\n                }\n            }\n            if (configuration[urlSelected]['method'] === 'POST') {\n                let data = {}\n                for (let i = 0; i < configuration[urlSelected]['return'].length; ++i) {\n                    let selected = document.getElementById('userInput')\n                    data[configuration[urlSelected][\"return\"][i]] = selected.value\n                }\n                init['body'] = JSON.stringify(data)\n            }\n\n            fetch(configuration[urlSelected]['submitUri'], init).then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n                return response.text().then(err => {\n                    throw new Error(err)\n                })\n            }).then(response => {\n                console.log(response)\n                Swal.fire({\n                    title: '成功!',\n                    text: `更新成功, 歡迎${response?.name ?? ''}!`,\n                    icon: 'success',\n                    confirmButtonText: 'Ok'\n                }).then(() => {\n                    configuration[urlSelected]?.afterFetch?.(response)\n                    this.props.history.go(0);\n                })\n            }).catch(error => {\n                let response = JSON.parse(error.message).error\n                Swal.fire({\n                    title: '錯誤!',\n                    html: (\n                        `錯誤： ${response?.localizedMessage ?? ''}! <br>\n                        錯誤代碼： ${response?.code}(${response?.status})<br>\n                        如問題持續發生，請提供這些資訊給工程師!\n                        `),\n                    icon: 'error',\n                    confirmButtonText: 'Ok'\n                })\n            })\n        }\n\n        return (\n            <React.Fragment>\n                {configuration[urlSelected] &&\n                <React.Fragment><h2>{configuration[urlSelected]['title']}</h2>\n                    <div className=\"form-group\">\n                        <label>{configuration[urlSelected]['hint']}</label>\n                        <input id='userInput' type='text' className='form-control'\n                               placeholder={configuration[urlSelected]['placeholder']}/>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={Send}>確認</button>\n                </React.Fragment>}\n                {!configuration[urlSelected] && urlSelected && <h2>請輸入合法功能</h2>}\n                {!configuration[urlSelected] && !urlSelected && <h2>請選取左邊功能以繼續</h2>}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withRouter(SettingConfigure)\n","import React from 'react'\r\nimport {Container, Row,Col} from \"react-bootstrap\";\r\n\r\nimport SettingOption from '../components/settingsOption'\r\nimport SettingConfigure from '../components/settingconfiguration/settingConfigure'\r\n\r\nclass Settings extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>設定</h1>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={3}>\r\n                            <SettingOption />\r\n                        </Col>\r\n                        <Col xs={7}>\r\n                            <SettingConfigure/>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Settings","import React,{useState,useEffect} from 'react'\r\n\r\nimport config from '../config.json'\r\n\r\nimport {\r\n    Card,\r\n    Button, Spinner\r\n} from 'react-bootstrap'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction ListStore(){\r\n    const [data,setData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const getData = ()=>{\r\n        const url = config['baseURL'] + 'stores'\r\n        console.log(url)\r\n        fetch(url,{\r\n            method: 'GET'\r\n        }).then(response => {\r\n            setLoading(false)\r\n            if (response.ok) {\r\n                return response.json()\r\n            }\r\n            return response.text().then(res => {\r\n                throw new Error(res)\r\n            })\r\n        }).catch((error) => {\r\n            console.log(error.message)\r\n            let response = JSON.parse(error.message)\r\n            window.alert(\r\n                `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`\r\n            )\r\n            window.location.replace('/')\r\n        }).then(myJson =>{\r\n            console.log(myJson)\r\n            setData(myJson)\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        getData()\r\n    },[])\r\n    return(\r\n        <div className=\"ListStore\">\r\n            {\r\n                data && (data.length > 0 ? data.map((item)=>\r\n                    <Card>\r\n                        <Card.Img variant=\"top\" src={item.picUrl} />\r\n                        <Card.Body style={{display:\"flex\"}}>\r\n                            <div>\r\n                                <Card.Title>{item.name}</Card.Title>\r\n                                <Card.Text>{item.description}</Card.Text>\r\n                            </div>\r\n                            <div style={{marginLeft:\"auto\"}}>\r\n                                <Button variant=\"primary\" as={Link} to={{pathname:`/order/${item.id}`}}>立即查看</Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                ) : <React.Fragment><br/><h2 style={{textAlign: 'center'}}>目前無相關資料</h2></React.Fragment>)\r\n            }\r\n            <center>\r\n                <Spinner animation={\"border\"} hidden={!loading}/>\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListStore","import React from 'react'\r\n\r\nimport Liststore from '../../components/liststore'\r\nimport {\r\n    Container\r\n} from 'react-bootstrap'\r\n\r\nclass Restaurant extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>餐廳</h1>\r\n                <Container>\r\n                    <Liststore />\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Restaurant","import React,{useState,useEffect} from 'react'\r\nimport config from '../config.json'\r\nimport Cookies from 'universal-cookie'\r\nimport {Button, Card, Container} from 'react-bootstrap'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Transaction(){\r\n    const [transaction,setTransaction] = useState([])\r\n\r\n    async function Update(){\r\n        const cookies = new Cookies()\r\n        const allcookies = cookies.getAll()\r\n        const fetchURL = config['baseURL'] + 'transactions'\r\n        fetch(fetchURL,{\r\n            method: 'GET',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `Bearer ${allcookies['session']}`\r\n            }\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            }\r\n            return response.text().then(res => {\r\n                throw new Error(res)\r\n            })\r\n        }).catch((error) => {\r\n            console.log(error.message)\r\n            let response = JSON.parse(error.message)\r\n            window.alert(\r\n                `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`\r\n            )\r\n            window.location.replace('/')\r\n        }).then(r => {\r\n            console.log(r)\r\n            setTransaction(r)\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        Update()\r\n    },[])\r\n\r\n    return(\r\n        <Container>\r\n            <div className={\"History\"}>\r\n                {\r\n                    transaction && transaction.length>0 && transaction.map((item)=>\r\n                        <Card>\r\n                            <Card.Img variant=\"top\" src={item.picUrl} />\r\n                            <Card.Body style={{display:\"flex\"}}>\r\n                                <div>\r\n                                    <Card.Title>{item.product_id}</Card.Title>\r\n                                    <Card.Text>{item.comment}</Card.Text>\r\n                                </div>\r\n                                <div style={{marginLeft:\"auto\"}}>\r\n                                    <Button variant=\"primary\" as={Link} to={{pathname:`/order/${item.id}`}}>查看</Button>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )\r\n                }\r\n            </div>\r\n        </Container>\r\n    )\r\n}","import React from 'react'\r\nimport Transaction from '../../components/transaction'\r\n\r\nclass Histories extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>歷史紀錄</h1>\r\n                <Transaction />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Histories","import React from 'react'\r\n\r\nclass StoreSetting extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>商家設定</h1>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StoreSetting","import React from 'react'\n\nimport {Link} from 'react-router-dom'\n\nclass MenuOption extends React.Component{\n    render() {\n        return (\n            <div className=\"optionBar\">\n                <ul>\n                    <li><Link to=\"/config/menu/new\">新增</Link></li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default MenuOption","import React, {useEffect, useState} from 'react'\r\nimport {Button, Card} from \"react-bootstrap\";\r\nimport config from \"../../config.json\";\r\nimport Cookies from 'universal-cookie'\r\nimport {Link} from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default function ListAddedFood(){\r\n    const [data,setData] = useState([])\r\n    const cookies = new Cookies()\r\n    const allcookies = cookies.getAll()\r\n    if(!allcookies['storeId']){\r\n        Swal.fire({\r\n            title: '錯誤!',\r\n            text: '404 (STORE_NOT_FOUND)',\r\n            icon: 'error',\r\n            confirmButtonText: 'Ok'\r\n        })\r\n    }\r\n    const getData = ()=>{\r\n        const url = config['baseURL'] + 'stores/'+ allcookies['storeId'] + '/products'\r\n        fetch(url,{\r\n            method: 'GET',\r\n            headers:{\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            }\r\n            return response.text().then(res => {\r\n                throw new Error(res)\r\n            })\r\n        }).catch((error) => {\r\n            console.log(error.message)\r\n            let response = JSON.parse(error.message)\r\n            window.alert(\r\n                `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`\r\n            )\r\n            window.location.replace('#/login')\r\n        }).then(myJson =>{\r\n            console.log(myJson)\r\n            setData(myJson)\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        getData()\r\n    })\r\n    return(\r\n        <div className=\"storeAdded\">\r\n            {\r\n                data && data.length>0 && data.map((item)=>\r\n                    <Card>\r\n                        <Card.Img variant=\"top\" src={item.picUrl} />\r\n                        <Card.Body style={{display:\"flex\"}}>\r\n                            <div>\r\n                                <Card.Title>{item.name}</Card.Title>\r\n                                <Card.Text>{item.description}</Card.Text>\r\n                            </div>\r\n                            <div style={{marginLeft:\"auto\"}}>\r\n                                <Button variant=\"primary\" as={Link} to={{pathname:`/order/${item.id}`}}>修改</Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport MenuOption from '../../components/menuoption'\r\nimport {Container} from \"react-bootstrap\";\r\nimport ListAddedFood from '../../components/sells/listaddedfood'\r\n\r\nclass MenuSetting extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>菜單設定</h1>\r\n                <Container>\r\n                    <MenuOption />\r\n                    <br />\r\n                    <ListAddedFood />\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenuSetting","import React from 'react'\r\n\r\nclass Advanced extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>進階設定</h1>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Advanced\r\n\r\n","import React from 'react'\r\nimport {Container} from \"react-bootstrap\";\r\nimport config from \"../config.json\"\r\n\r\nclass CodeofConduct extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n        // eslint-disable-next-line\r\n        let toBeReplace = new RegExp(\"\\n\", \"g\")\r\n        const titleUrl = config['docRoot'] + \"title.json\"\r\n        fetch(titleUrl).then(response =>{\r\n            return response.json()\r\n        }).then(json=>{\r\n            let title = document.getElementById('title')\r\n            title.innerHTML = json['title']\r\n        })\r\n        const url = config['docRoot'] + \"coc.json\"\r\n\r\n        fetch(url)\r\n            .then(response => {\r\n                return response.json()\r\n            }).then(json => {\r\n                for (let i = 0; i < json['title'].length; ++i) {\r\n                    let ptitle = document.createElement('H2')\r\n                    ptitle.textContent = json['title'][i]\r\n\r\n                    document.getElementById('COC').appendChild(ptitle)\r\n                    document.getElementById('COC').innerHTML += \"<p>\" + json['context'][i].replace(toBeReplace, \"<br>\") + \"</p>\"\r\n                }\r\n                let updateTime = document.createElement('H3')\r\n                updateTime.innerText = \"最後更新日期：\"+json['date']\r\n                document.getElementById('COC').appendChild(updateTime)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>行為準則</h1>\r\n                <Container>\r\n                    <br />\r\n                    <p id=\"title\" />\r\n                    <div id=\"COC\" />\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CodeofConduct","import React from 'react'\r\nimport {Container} from \"react-bootstrap\";\r\nimport config from \"../config.json\"\r\n\r\n\r\nclass Privacy extends React.Component{\r\n    componentDidMount() {\r\n        window.scrollTo({top: 0,behavior: 'smooth'})\r\n        // eslint-disable-next-line\r\n        let toBeReplace = new RegExp(\"\\n\",\"g\")\r\n        let titleUrl = config['docRoot'] + \"title.json\"\r\n\r\n        fetch(titleUrl)\r\n            .then(response =>{\r\n                return response.json()\r\n            }).then(json =>{\r\n                let title = document.getElementById('title')\r\n                title.innerHTML = json['title']\r\n            })\r\n\r\n        let url = config['docRoot'] + \"privacy.json\"\r\n\r\n        fetch(url)\r\n            .then(response => {\r\n                return response.json()\r\n            }).then(json => {\r\n                for (let i = 0; i < json['title'].length; ++i) {\r\n                    let ptitle = document.createElement('H2')\r\n                    ptitle.textContent = json['title'][i]\r\n\r\n                    document.getElementById('policy').appendChild(ptitle)\r\n                    document.getElementById('policy').innerHTML += \"<p>\" + json['context'][i].replace(toBeReplace, \"<br>\") + \"</p>\"\r\n                }\r\n                let updateTime = document.createElement('H3')\r\n                updateTime.innerText = \"最後更新日期：\"+json['date']\r\n                document.getElementById('policy').appendChild(updateTime)\r\n            })\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>隱私權聲明</h1>\r\n                <Container>\r\n                    <br />\r\n                    <p id=\"title\" />\r\n                    <div id='policy' />\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Privacy","import React from 'react'\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Cookies from 'universal-cookie'\r\nimport config from '../config.json'\r\n//import LoadingSpinner from '../components/loadingspinner'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Signupblock extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const Send = ()=> {\r\n            const passwd = document.getElementById('userInputPasswd')\r\n            const passwdVerify = document.getElementById('userInputPasswdVerification')\r\n            const email = document.getElementById('userInputEmail')\r\n            const token = document.getElementById('activateToken')\r\n            const username = document.getElementById('username')\r\n\r\n            //verify inputs\r\n            if (!(passwd.value && passwdVerify.value && email.value && token.value && username.value)) {\r\n                return\r\n            }\r\n\r\n            //verify and password is not the same\r\n            if (passwd.value !== passwdVerify.value) {\r\n                window.alert('密碼與密碼驗證不符')\r\n                //empty the input box\r\n                passwd.value = ''\r\n                passwdVerify.value = ''\r\n                return\r\n            }\r\n\r\n            //verify email\r\n            let emailRule = /^\\w+((-\\w+)|(\\.\\w+))*@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z]+$/\r\n            //validate ok or not\r\n            if (email.value.search(emailRule) === -1) {\r\n                return\r\n            }\r\n\r\n            //send things to server\r\n            let data = {\r\n                'email': email.value,\r\n                'name': username.value,\r\n                'password': passwd.value,\r\n                'registration_code': token.value\r\n            }\r\n\r\n            let url = config.baseURL + 'register'\r\n            //send request\r\n            this.setState({\r\n                loading: true\r\n            })\r\n            fetch(url,{\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                }\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                }\r\n                return response.text().then(res => {\r\n                    throw new Error(res)\r\n                })\r\n            }).catch((error) => {\r\n                console.log(error.message)\r\n                let response = JSON.parse(error.message)\r\n                window.alert(\r\n                    `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`\r\n                )\r\n                this.setState({loading: false})\r\n            }).then(response => {\r\n                // add cookies\r\n                const cookies = new Cookies()\r\n                //cookies.set('session', response['access_token'], {path: '/'})\r\n                cookies.set('alert', '註冊成功', {path: '/'})\r\n                window.location.replace('/login')\r\n                this.setState({loading: false})\r\n            }).catch(err=>{\r\n                console.log(`Failed: ${err}`)\r\n                this.setState({loading: false})\r\n            }).then(this.setState(\r\n                {loading: false\r\n                }))\r\n\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n            <Container>\r\n                <form className={\"signInBlock\"}>\r\n                    <h3 style={{textAlign: 'center'}}>帳號註冊</h3>\r\n                    <div className=\"form-group\">\r\n                        <label>啟動碼</label>\r\n                        <input id=\"activateToken\" type=\"text\" className=\"form-control\" placeholder=\"Enter the activate code\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>電子郵件</label>\r\n                        <input id=\"userInputEmail\" type=\"email\" className=\"form-control\" placeholder=\"Enter email\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>密碼</label>\r\n                        <input id=\"userInputPasswd\" type=\"password\" className=\"form-control\" placeholder=\"Enter password\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>密碼確認</label>\r\n                        <input id=\"userInputPasswdVerification\" type=\"password\" className=\"form-control\" placeholder=\"Enter password\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>使用者名稱</label>\r\n                        <input id=\"username\" type=\"text\" className=\"form-control\" placeholder=\"Enter the username\" required/>\r\n                    </div>\r\n\r\n                    <Row>\r\n                        <Col></Col>\r\n                        <Col></Col>\r\n                        <Col>{this.state.loading? <Link className=\"btn btn-primary btn-block\" type=\"submit\">請稍後</Link>:<Link className=\"btn btn-primary btn-block\" type='submit' onClick={Send}>送出</Link>}</Col>\r\n                    </Row>\r\n                </form>\r\n            </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signupblock","import React from 'react'\r\nimport Signupblock from \"../components/signupblock\";\r\n\r\nclass Signup extends React.Component{\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Signupblock />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup","import React from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Container,\r\n    Form\r\n} from 'react-bootstrap'\r\nimport Cookies from \"universal-cookie\";\r\n\r\nclass Feedback extends React.Component{\r\n    render() {\r\n        const Send = () => {\r\n            //send form\r\n            // data to send\r\n            let name = document.getElementById('nickName')\r\n            let question = document.getElementById('question')\r\n\r\n            if(name.value === ''){\r\n                return\r\n            }\r\n            if(question.value === ''){\r\n                return\r\n            }\r\n\r\n            let toSend = new FormData()\r\n            toSend.append('entry.1239005013',name.value)\r\n            toSend.append('entry.664971969',question.value)\r\n\r\n            //link to send\r\n            const url = 'https://docs.google.com/forms/u/0/d/e/1FAIpQLSdppxPAZlPuLMgelWDJ1wP6fIB4vScvivNrn3BZ9g7etGklCA/formResponse'\r\n\r\n            fetch(url,{\r\n                method: 'POST',\r\n                mode: 'no-cors',\r\n                body: toSend\r\n            }).then(response=>{\r\n                if(response.ok){\r\n                    return response.json()\r\n                }\r\n                return response.text().then(res => {\r\n                    throw new Error(res)\r\n                })\r\n            }).catch(err=>{\r\n                console.log(err.message)\r\n                let response = JSON.parse(err.message)\r\n                window.alert(\r\n                    `${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`\r\n                )\r\n                return\r\n            }).then(json=>{\r\n                window.alert('message sent')\r\n                console.log(json)\r\n            })\r\n            window.alert('已經收到你的訊息了\\n我們將會努力改進')\r\n            const cookies = new Cookies()\r\n            cookies.set('alert','傳送成功',{path:'/'})\r\n            document.location.replace('#/feedback')\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <h1 style={{textAlign: 'center'}}>意見反饋</h1>\r\n                <Container>\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>暱稱：</Form.Label>\r\n                            <Form.Control id='nickName' type=\"text\" placeholder=\"小/大明\" required/>\r\n                            <Form.Text className=\"text-muted\">\r\n                                我們絕對不會因為你的暱稱很智障就不理你\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>問題：</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows='5' id='question' required/>\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={Send}>\r\n                            送出\r\n                        </Button>\r\n                    </Form>\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Feedback","import React, {useState} from 'react'\nimport {Button, Col, Container, Figure, Row, Spinner} from \"react-bootstrap\";\nimport config from \"../../config.json\";\nimport Cookies from \"universal-cookie\";\nimport {useHistory} from \"react-router-dom\";\n\nclass ToolBar extends React.Component {\n    render() {\n        const NewOption = () => {\n            const popupUrl = config['project'] + '#/config/new/option'\n            const popupWindow = window.open(popupUrl,/*'popUpWindow',*/'', 'location=no,height=500,width=400,top=100,left=300')\n            popupWindow.body = \"功能未開放\"\n        }\n        return (\n            <div className=\"optionBar\">\n                <ul>\n                    <li><Button variant=\"dark\" onClick={NewOption}><i className=\"fa fa-plus\"\n                                                                      aria-hidden=\"true\"/>新增選項</Button></li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nfunction MenuConfigurator() {\n    const [image, setImage] = useState('')\n    const [uploading, setUploading] = useState(false)\n    const [imageUrl, setImageUrl] = useState('')\n    const history = useHistory();\n    const cookies = new Cookies()\n    let allcookies = cookies.getAll()\n    const storeId = allcookies['storeId']\n\n    async function Send() {\n        const name = document.getElementById('foodTitle').value\n        const subtitle = document.getElementById('foodSub').value\n        const price = document.getElementById('foodPrice').value\n        const postURL = config['baseURL'] + 'stores/' + storeId + '/products'\n\n        var data = {\n            'name': name,\n            'price': price,\n            'description': subtitle,\n            'store_id': storeId,\n            \"image\": imageUrl\n        }\n        //window.alert(postURL)\n        await fetch(postURL, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${allcookies['session']}`\n            }\n        }).then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n            return response.text().then(res => {\n                throw new Error(res)\n            })\n        }).catch((error) => {\n            console.log(error.message)\n            let response = JSON.parse(error.message)\n            window.alert(`${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`)\n        }).then(response => {\n            console.log(response)\n            history.push('/config/menu')\n        })\n    }\n\n    function handleChangeImage(evt) {\n        console.log(\"Uploading\");\n        const storeId = allcookies['storeId']\n        var reader = new FileReader();\n        var file = evt.target.files[0];\n\n        reader.onload = function (upload) {\n            console.log(file)\n            setImage(upload.target.result);\n            const formData = new FormData()\n            formData.append('image', file)\n            setUploading(true)\n            fetch(config['baseURL'] + 'stores/' + storeId + '/images', {\n                method: 'POST',\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Authorization\": `Bearer ${allcookies['session']}`\n                },\n                body: formData\n            }).then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n                return response.text().then(res => {\n                    throw new Error(res)\n                })\n            }).catch((error) => {\n                console.log(error.message)\n                let response = JSON.parse(error.message)\n                window.alert(`${response.message}\\n與伺服器連線錯誤，請再試一次\\n如果問題無法解決，請聯絡管理員`)\n            }).then(response => {\n                console.log(typeof response)\n                //window.alert(response)\n                setImageUrl(response.result.data)\n                setUploading(false)\n            })\n        };\n        reader.readAsDataURL(file);\n        console.log(\"Uploaded\");\n    }\n\n    return (\n        <form\n            className={\"foodBlock\"}\n            onSubmit={e => {\n                e.preventDefault()\n                Send()\n            }}\n        >\n            <div className=\"form-group\">\n                <label>食物名</label>\n                <input id=\"foodTitle\" type=\"text\" className=\"form-control\" placeholder=\"標題\" required/>\n            </div>\n            <div className=\"form-group\">\n                <label>價錢</label>\n                <input id=\"foodPrice\" type=\"number\" className=\"form-control\" placeholder=\"價錢\" required/>\n            </div>\n            <div className=\"form-group\">\n                <label>副標題</label>\n                <input id=\"foodSub\" type=\"text\" className=\"form-control\" placeholder=\"副標(選填)\"/>\n            </div>\n            <Row>\n                <Col>\n                    <div className=\"form-group\">\n                        <Button as={\"label\"} variant={\"primary\"} hidden={imageUrl !== ''}>\n                            上傳圖片\n                            <input type=\"file\" name=\"file\"\n                                   className=\"upload-file\"\n                                   id=\"file\"\n                                   onChange={handleChangeImage}\n                                   required\n                                   hidden\n                            />\n                        </Button>\n                    </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <center>\n                        <Spinner hidden={uploading === false} animation={\"border\"}/>\n                        <br/>\n                        <a href={config['baseURL'].replace(/\\/api/, '') + imageUrl} target=\"_blank\"\n                           hidden={!image || uploading}\n                           rel=\"noreferrer\">{config['baseURL'].replace(/\\/api/, '') + imageUrl}</a>\n                        <br/>\n                        <Figure.Image\n                            width={300}\n                            src={image && !uploading ? config['baseURL'].replace(/\\/api/, '') + imageUrl : \"https://via.placeholder.com/300x180?text=Product+Image\"}\n                            resizeMode=\"contain\"\n                        />\n                    </center>\n                </Col>\n            </Row>\n            <Row>\n                <div className=\"h-100 align-items-center\">\n                    <div id=\"placeToAdd\"/>\n                </div>\n            </Row>\n            <Row>\n                <Col>\n                    <button className=\"btn btn-primary btn-block\">送出</button>\n                </Col>\n            </Row>\n        </form>\n    )\n}\n\nclass NewMenu extends React.Component {\n    componentDidMount() {\n        window.scrollTo({top: 0, behavior: 'smooth'})\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <h1 style={{textAlign: 'center'}}>新增菜單</h1>\n                <Container>\n                    <ToolBar/>\n                    <br/>\n                    <MenuConfigurator/>\n                </Container>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default NewMenu","import React, {useEffect, useState} from 'react'\nimport {Button, Card,Container} from \"react-bootstrap\";\n\nfunction NewOption(){\n    // eslint-disable-next-line no-unused-vars\n    const [array,setArray] = useState([])\n    const [data,setData] = useState([])\n    //const inputOption = document.getElementById('inputOption')\n\n    const deleteFile = (node) => {\n        window.alert(node)\n    }\n    /*const newOption = () =>{\n        if(inputOption.value !== ''){\n            if(array.length === 0){\n                setArray([inputOption.value])\n            }else{\n                let temp = array\n                temp.push(inputOption.value)\n                setArray(temp)\n            }\n            inputOption.value = ''\n        }else{\n            window.alert('輸入不得為空')\n        }\n    }*/\n\n\n    useEffect(()=>{\n        const getData = ()=>{\n            setData(array)\n        }\n        getData()\n    },[array])\n\n    return(\n        <React.Fragment>\n            <h1 style={{textAlign: 'center'}}>選項設定</h1>\n            <Container>\n                <form >\n                    <div className=\"form-group\">\n                        <label>新選項</label>\n                        <input id=\"inputOption\" type=\"text\" className=\"form-control\" placeholder=\"選項名\" />\n                    </div>\n                    <Button className=\"btn btn-primary btn-block\">新增</Button>\n                </form>\n\n                <br />\n                {\n                    data.map((name,index) => {\n                        return(\n                            <Card key={name}>\n                                <Card.Body style={{display:\"flex\"}}>\n                                    <div>\n                                        <Card.Title>{name}</Card.Title>\n                                    </div>\n                                    <div style={{marginLeft:\"auto\"}}>\n                                        <Button variant=\"primary\" onClick={() => deleteFile(index)}>刪除</Button>\n                                    </div>\n                                </Card.Body>\n                            </Card>\n                    )})\n                }\n            </Container>\n\n\n        </React.Fragment>\n    )\n}\n\nexport default NewOption","import React from \"react\";\nimport {Card} from \"react-bootstrap\";\n\n\nclass DiskQuota extends React.Component {\n    render() {\n        return (\n            <Card className={[\"m-3\", \"p-3\"]}>\n                <div hidden={!this.props.quota.exceed_quota}>\n                    儲存空間已滿\n                </div>\n                <div>\n                    儲存空間剩餘 {(this.props.quota.remain / 1024000).toFixed(2)} Mb / {this.props.quota.total} Mb\n                    (已用{(((this.props.quota.total - (this.props.quota.remain / 1024000)) / this.props.quota.total) * 100).toFixed(2)}%)\n                </div>\n            </Card>\n        )\n    }\n\n}\n\nexport default DiskQuota","import Cookies from \"universal-cookie\";\nimport config from '../config.json'\n\nexport class API {\n    cookies = new Cookies();\n\n    call(endpoint: string, data: Object, cb) {\n        endpoint = config['baseURL'].slice(0, -1) + endpoint\n        for (let str in (data.params || {})) {\n            endpoint = endpoint.replaceAll(\":\"+str, data.params[str])\n        }\n        let body = (typeof data.body === 'object' ? JSON.stringify(data.body) : null)\n        let headers = new Headers({\n            'Content-Type': 'application/json',\n            'Accept': \"application/json\",\n            'Authorization': `Bearer ${this.cookies.get('session')}`,\n            ...data.headers\n        })\n        fetch(endpoint, {\n            method: data.method,\n            body,\n            headers\n        }).then(r => r.json()).then(cb)\n    }\n}","import React from \"react\";\n\nclass Subscription extends React.Component {\n    render() {\n        return (\n            <tr>\n                <td>{this.props.subscription.plan.name}</td>\n                <td>{this.props.subscription.plan.description}</td>\n                <td>{this.props.subscription.plan.disk_quota} Mb</td>\n                <td>{this.props.subscription.expires_at ?? \"永久有效\"}</td>\n            </tr>\n        )\n    }\n\n}\n\nexport default Subscription","import React from \"react\";\nimport config from '../../../config.json';\nclass Plan extends React.Component {\n    constructor(props) {\n        super(props);\n        this.generateECPay = this.generateECPay.bind(this)\n    }\n\n    generateECPay(){\n        return (\n            config['baseURL'].replace('api/', '') +\n            this.props.storeId + '/' + this.props.plan.id + '/sendOrder'\n        )\n    }\n\n    render() {\n        return (\n            <tr>\n                <td>{this.props.plan.name}</td>\n                <td>{this.props.plan.description}</td>\n                <td>{this.props.plan.disk_quota} Mb</td>\n                <td>\n                    <a href={this.generateECPay()} rel=\"noreferrer\" className=\"btn btn-primary\" target={\"_blank\"}>購買</a>\n                </td>\n            </tr>\n        )\n    }\n\n}\n\nexport default Plan","import React from 'react'\nimport {Col, Spinner, Row, Card, Table} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faHeadphones} from '@fortawesome/free-solid-svg-icons'\nimport DiskQuota from \"./CustomerServiceComponent/DiskQuota\";\nimport Cookies from \"universal-cookie/lib\";\nimport {API} from \"../../helpers/API\";\nimport Subscription from \"./CustomerServiceComponent/Subscription\";\nimport Plan from \"./CustomerServiceComponent/Plan\";\nimport Swal from \"sweetalert2\";\nimport {withRouter} from \"react-router-dom\";\n\nconst api = new API()\nconst cookies = new Cookies()\n\nclass CustomerService extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            quota: {},\n            loading: false,\n            subscriptions: [],\n            plans: []\n        }\n    }\n\n    getDiskQuota(storeId) {\n        this.setState({\n            loading: true\n        })\n        api.call('/stores/:store/disk_quota', {\n            method: \"GET\",\n            params: {\n                store: storeId\n            }\n        }, (quota) => {\n            console.log(quota.remain)\n            this.setState({\n                quota,\n                loading: false\n            });\n        })\n    }\n\n    getSubscriptions(storeId) {\n        this.setState({\n            loading: true\n        })\n        api.call('/stores/:store/subscriptions', {\n            method: \"GET\",\n            params: {\n                store: storeId\n            }\n        }, (subscriptions) => {\n            console.log(subscriptions)\n            this.setState({\n                subscriptions,\n                loading: false\n            });\n        })\n    }\n\n    getPlans(storeId) {\n        this.setState({\n            loading: true\n        })\n        api.call('/plans', {\n            method: \"GET\",\n            params: {\n                store: storeId\n            }\n        }, (plans) => {\n            console.log(plans)\n            this.setState({\n                plans,\n                loading: false\n            });\n        })\n    }\n\n    componentDidMount(props) {\n        window.scrollTo({top: 0, behavior: 'smooth'})\n        let storeId = cookies.get('storeId')\n        if (!storeId) {\n            Swal.fire({\n                title: '錯誤!',\n                text: '404 (STORE_NOT_FOUND)',\n                icon: 'error',\n                confirmButtonText: 'Ok'\n            }).then(()=>this.props.history.push('/settings/activate'))\n        }else{\n            this.setState({\n                storeId\n            })\n            this.getDiskQuota(storeId)\n            this.getSubscriptions(storeId)\n            this.getPlans(storeId)\n        }\n    }\n\n    render() {\n        let subscriptionsElems = this.state.subscriptions.map((subscription, index) => {\n            return (\n                <Subscription key={subscription.id} subscription={subscription}/>\n            )\n        })\n\n        let plansElems = this.state.plans.map((plan, index) => {\n            return (<Plan key={plan.id} plan={plan} storeId={this.state.storeId}/>)\n        })\n        return (\n            <React.Fragment>\n                <h1 style={{textAlign: 'center'}}>客服中心 <FontAwesomeIcon icon={faHeadphones}/></h1>\n                <Row>\n                    <Col>\n                        <center><Spinner animation={\"border\"} hidden={!this.state.loading}/></center>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Card className={[\"m-3\", \"p-3\"]}>\n                            <h5>您的店家ID為： <b>{this.state.storeId}</b></h5>\n                            <DiskQuota quota={this.state.quota}/>\n                            <Card className={[\"m-3\", \"p-3\"]}>\n                                您擁有的方案列表\n                                <Table>\n                                    <thead>\n                                    <tr>\n                                        <th>方案名稱</th>\n                                        <th>說明</th>\n                                        <th>儲存容量</th>\n                                        <th>到期時間</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {subscriptionsElems}\n                                    </tbody>\n                                </Table>\n                            </Card>\n\n                            <Card className={[\"m-3\", \"p-3\"]}>\n                                可購買的方案列表\n                                <div className=\"alert alert-danger\">目前為測試階段請勿付款</div>\n                                <Table>\n                                    <thead>\n                                    <tr>\n                                        <th>方案名稱</th>\n                                        <th>說明</th>\n                                        <th>儲存容量</th>\n                                        <th>購買</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {plansElems}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Card>\n                    </Col>\n                </Row>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withRouter(CustomerService)","import React from 'react'\nimport {Button, Col, Row, Spinner, Toast, ToastBody, ToastHeader} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faHeadphones} from '@fortawesome/free-solid-svg-icons'\nimport Cookies from \"universal-cookie/lib\";\nimport {API} from \"../../helpers/API\";\nimport Echo from 'laravel-echo';\nimport axios from \"axios\";\nimport config from '../../config.json';\nimport IntroJs from 'intro.js'\nimport 'intro.js/introjs.css';\n\nconst api = new API()\nconst cookies = new Cookies();\nwindow.Pusher = require('pusher-js');\nwindow.Echo = new Echo({\n    broadcaster: 'pusher',\n    wsHost: 'lunchapi.hsuan.app',\n    wsPath: '/websockets',\n    path: '/websockets/',\n    disableStats: true,\n    key: 'test',\n    forceTLS: false,\n    authorizer: (channel, options) => {\n        return {\n            authorize: (socketId, callback) => {\n                axios({\n                    method: \"POST\",\n                    url: config['baseURL'] + 'broadcasting/auth',\n                    headers: {\n                        Authorization: `Bearer ${cookies.get('session')}`,\n                    },\n                    data: {\n                        socket_id: socketId,\n                        channel_name: channel.name,\n                    },\n                }).then(response => {\n                    callback(false, response.data);\n                }).catch(error => {\n                    callback(true, error);\n                });\n            }\n        };\n    },\n});\n\nclass SellsTest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            transactions: []\n        }\n    }\n\n    componentDidMount(props) {\n        let x = new IntroJs()\n        window.scrollTo({top: 0, behavior: 'smooth'})\n        setTimeout(() => {\n            x.start()\n        },5000)\n        let storeId = cookies.get('storeId')\n        if (!storeId) {\n            // Out\n        } else {\n            let that = this\n            api.call('/me', {\n                method: \"GET\"\n            }, (r) => {\n                window.Echo.private(`user.${r.id}`)\n                    .listen('.transaction.created', function (e) {\n                        console.log(e)\n                        new Notification(`${e.transaction.id} ${e.transaction?.product?.name}`);\n                        that.setState(prev => ({\n                            transactions: [\n                                e.transaction,\n                                ...prev.transactions\n                            ]\n                        }))\n                    });\n            })\n        }\n    }\n\n    requestNotification() {\n        if (Notification && Notification.permission === \"granted\") {\n            new Notification(\"測試通知\");\n        } else if (Notification && Notification.permission !== \"denied\") {\n            Notification.requestPermission(function (status) {\n                if (Notification.permission !== status) {\n                    Notification.permission = status;\n                }\n                if (status === \"granted\") {\n                    new Notification(\"測試通知\");\n                } else {\n                    alert(\"你不開通知我也不能提醒你\");\n                }\n            });\n        } else {\n            alert(\"你不開通知我也不能提醒你\");\n        }\n    }\n\n    transactionsToast() {\n        return this.state.transactions.map((value, index) => {\n            return (\n                <Toast>\n                    <ToastHeader>\n                        <strong className=\"mr-auto\">({value.id.substring(0, 5)}) {value?.product?.name}</strong>\n                    </ToastHeader>\n                    <ToastBody>\n                        {value?.product?.name} x {value?.qty} <br/>\n                        {value?.product?.description}\n                    </ToastBody>\n                </Toast>\n            )\n        })\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <h1 style={{textAlign: 'center'}}>訂單列表 <FontAwesomeIcon icon={faHeadphones}/></h1>\n                <Row>\n                    <Col>\n                        <center><Spinner animation={\"border\"} hidden={!this.state.loading}/></center>\n                    </Col>\n                </Row>\n                <Button data-intro='Hello step one!' onClick={this.requestNotification} >傳送通知</Button>\n                <Row>\n                    <Col>\n                        {this.transactionsToast()}\n                    </Col>\n                    <Col>\n                        {this.state.transactions.length}{JSON.stringify(this.state.transactions)}\n                    </Col>\n                </Row>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default SellsTest","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {HashRouter,Switch,Route} from 'react-router-dom'\n\nimport OfflineDetect from \"./components/offlineDetect\";\nimport Navibar from \"./components/navigationbar\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/footer\";\n\nimport Homepage from './page/main'\nimport Login from './page/login'\nimport Purchase from './page/customer/purchase'\nimport Order from './page/customer/order'\nimport Settings from './page/settings'\nimport Restaurant from './page/customer/restaurant'\nimport Histories from './page/customer/history'\nimport StoreSetting from './page/sells/store'\nimport MenuSetting from './page/sells/menu'\nimport Advanced from './page/sells/advanced'\nimport CodeOfConduct from \"./page/codeofconduct\"\nimport Privacy from './page/privacy'\nimport Signup from './page/signup'\nimport Feedback from './page/feedback';\nimport NewMenu from './page/sells/newmenu'\nimport NewOption from './page/sells/newoption'\nimport CustomerService from \"./page/sells/service\";\nimport SellsTest from \"./page/sells/test\";\n\nfunction App() {\n  return (\n      <HashRouter>\n          <OfflineDetect />\n          <Navibar />\n          <Notification />\n        <Switch>\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/restaurant\" component={Restaurant} />\n            <Route path=\"/settings\" component={Settings} />\n            <Route path=\"/purchase/:store/:product\" component={Purchase} />\n            <Route path=\"/order/:storeId\" component={Order} />\n            <Route path=\"/history\" component={Histories} />\n            <Route path=\"/service\" component={CustomerService} />\n            <Route path=\"/sells/test\" component={SellsTest} />\n            <Route path='/config/new/option' component={NewOption}/>\n            <Route path=\"/config/store\" component={StoreSetting} />\n            <Route path=\"/config/menu/new\" component={NewMenu}/>\n            <Route path=\"/config/menu\" component={MenuSetting} />\n            <Route path=\"/config/advanced/:id\" component={Advanced} />\n            <Route path=\"/privacy\" component={Privacy}/>\n            <Route path=\"/COC\" component={CodeOfConduct} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/feedback\" component={Feedback}/>\n            <Route path=\"/\" component={Homepage} />\n        </Switch>\n        <Footer />\n      </HashRouter>\n\n  )\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n//import {register} from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n//serviceWorkerRegistration.register({\n//     onUpdate: registration =>{\n//         alert('New version discovered! Ready to update?')\n//         if(registration && registration.waiting){\n//             registration.waiting.postMessage({type: 'SKIP_WAITING'})\n//         }\n//         window.location.reload()\n//     }\n// });\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}